6135aa3c326c935d381e2259a12483a2
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _users = _interopRequireDefault(require("./users.api"));
function cov_1uxzsggdni() {
  var path = "D:\\NativeApp\\src\\redux\\users\\users.reducer.ts";
  var hash = "e7c47262c9c2c7606763cbf910a88f5feeaf07e6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\redux\\users\\users.reducer.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 42
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 38,
          column: 2
        }
      },
      "2": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "3": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "4": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "5": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "6": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "8": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 57
        }
      },
      "9": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 40
          },
          end: {
            line: 24,
            column: 41
          }
        },
        loc: {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 28,
            column: 43
          }
        },
        loc: {
          start: {
            line: 28,
            column: 71
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 33,
            column: 42
          }
        },
        loc: {
          start: {
            line: 33,
            column: 70
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 33
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e7c47262c9c2c7606763cbf910a88f5feeaf07e6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1uxzsggdni = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uxzsggdni();
var initialUserState = (cov_1uxzsggdni().s[0]++, {
  isUsersLoading: false,
  isUsersError: false,
  usersData: []
});
var userSlice = (cov_1uxzsggdni().s[1]++, (0, _toolkit.createSlice)({
  name: 'users',
  initialState: initialUserState,
  reducers: {},
  extraReducers: function extraReducers(builder) {
    cov_1uxzsggdni().f[0]++;
    cov_1uxzsggdni().s[2]++;
    builder.addCase(_users.default.pending, function (state) {
      cov_1uxzsggdni().f[1]++;
      cov_1uxzsggdni().s[3]++;
      state.isUsersLoading = true;
    });
    cov_1uxzsggdni().s[4]++;
    builder.addCase(_users.default.fulfilled, function (state, action) {
      cov_1uxzsggdni().f[2]++;
      cov_1uxzsggdni().s[5]++;
      state.isUsersLoading = false;
      cov_1uxzsggdni().s[6]++;
      state.usersData = action.payload;
    });
    cov_1uxzsggdni().s[7]++;
    builder.addCase(_users.default.rejected, function (state, action) {
      cov_1uxzsggdni().f[3]++;
      cov_1uxzsggdni().s[8]++;
      console.log('users fetch error: ', action.payload);
      cov_1uxzsggdni().s[9]++;
      state.isUsersError = true;
    });
  }
}));
var _default = userSlice.reducer;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9vbGtpdCIsInJlcXVpcmUiLCJfdXNlcnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiY292XzF1eHpzZ2dkbmkiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJpbml0aWFsVXNlclN0YXRlIiwiaXNVc2Vyc0xvYWRpbmciLCJpc1VzZXJzRXJyb3IiLCJ1c2Vyc0RhdGEiLCJ1c2VyU2xpY2UiLCJjcmVhdGVTbGljZSIsImluaXRpYWxTdGF0ZSIsInJlZHVjZXJzIiwiZXh0cmFSZWR1Y2VycyIsImJ1aWxkZXIiLCJhZGRDYXNlIiwiZmV0Y2hVc2VycyIsInBlbmRpbmciLCJzdGF0ZSIsImZ1bGZpbGxlZCIsImFjdGlvbiIsInBheWxvYWQiLCJyZWplY3RlZCIsImNvbnNvbGUiLCJsb2ciLCJfZGVmYXVsdCIsInJlZHVjZXIiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbInVzZXJzLnJlZHVjZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGVTbGljZX0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCc7XG5cbmltcG9ydCB7VXNlclR5cGV9IGZyb20gJy4uLy4uL21vZGVscy91c2Vycy50eXBlJztcbmltcG9ydCBmZXRjaFVzZXJzIGZyb20gJy4vdXNlcnMuYXBpJztcblxudHlwZSBJbml0aWFsVXNlclR5cGUgPSB7XG4gIGlzVXNlcnNMb2FkaW5nOiBib29sZWFuO1xuICBpc1VzZXJzRXJyb3I6IGJvb2xlYW47XG4gIHVzZXJzRGF0YTogVXNlclR5cGVbXTtcbn07XG5cbmNvbnN0IGluaXRpYWxVc2VyU3RhdGU6IEluaXRpYWxVc2VyVHlwZSA9IHtcbiAgaXNVc2Vyc0xvYWRpbmc6IGZhbHNlLFxuICBpc1VzZXJzRXJyb3I6IGZhbHNlLFxuICB1c2Vyc0RhdGE6IFtdLFxufTtcblxuY29uc3QgdXNlclNsaWNlID0gY3JlYXRlU2xpY2Uoe1xuICBuYW1lOiAndXNlcnMnLFxuICBpbml0aWFsU3RhdGU6IGluaXRpYWxVc2VyU3RhdGUsXG4gIHJlZHVjZXJzOiB7fSxcbiAgZXh0cmFSZWR1Y2VyczogKGJ1aWxkZXI6IGFueSkgPT4ge1xuICAgIC8vIGFwaSBpcyBsb2FkaW5nIGRhdGFcbiAgICBidWlsZGVyLmFkZENhc2UoZmV0Y2hVc2Vycy5wZW5kaW5nLCAoc3RhdGU6IGFueSkgPT4ge1xuICAgICAgc3RhdGUuaXNVc2Vyc0xvYWRpbmcgPSB0cnVlO1xuICAgIH0pO1xuICAgIC8vIGFwaSBoYXMgbG9hZGVkIGRhdGEgc3VjY2Vzc2Z1bGx5XG4gICAgYnVpbGRlci5hZGRDYXNlKGZldGNoVXNlcnMuZnVsZmlsbGVkLCAoc3RhdGU6IGFueSwgYWN0aW9uOiBhbnkpID0+IHtcbiAgICAgIHN0YXRlLmlzVXNlcnNMb2FkaW5nID0gZmFsc2U7XG4gICAgICBzdGF0ZS51c2Vyc0RhdGEgPSBhY3Rpb24ucGF5bG9hZDtcbiAgICB9KTtcbiAgICAvLyBhcGkgaGFzIGZhaWxlZCB0byBsb2FkIGRhdGFcbiAgICBidWlsZGVyLmFkZENhc2UoZmV0Y2hVc2Vycy5yZWplY3RlZCwgKHN0YXRlOiBhbnksIGFjdGlvbjogYW55KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygndXNlcnMgZmV0Y2ggZXJyb3I6ICcsIGFjdGlvbi5wYXlsb2FkKTtcbiAgICAgIHN0YXRlLmlzVXNlcnNFcnJvciA9IHRydWU7XG4gICAgfSk7XG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlclNsaWNlLnJlZHVjZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBR0EsSUFBQUMsTUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQXFDLFNBQUFHLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxlQUFBO0lBQUFsQixJQUFBO0VBQUE7RUFBQSxJQUFBbUIsUUFBQSxHQUFBbEIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFnQixRQUFBLENBQUFwQixJQUFBLEtBQUFvQixRQUFBLENBQUFwQixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBbUIsUUFBQSxDQUFBcEIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBZ0IsY0FBQSxHQUFBRCxRQUFBLENBQUFwQixJQUFBO0VBQUE7SUFBQUQsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQXNCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUF0QixjQUFBO0FBUXJDLElBQU11QixnQkFBaUMsSUFBQXZCLGNBQUEsR0FBQWlCLENBQUEsT0FBRztFQUN4Q08sY0FBYyxFQUFFLEtBQUs7RUFDckJDLFlBQVksRUFBRSxLQUFLO0VBQ25CQyxTQUFTLEVBQUU7QUFDYixDQUFDO0FBRUQsSUFBTUMsU0FBUyxJQUFBM0IsY0FBQSxHQUFBaUIsQ0FBQSxPQUFHLElBQUFXLG9CQUFXLEVBQUM7RUFDNUJmLElBQUksRUFBRSxPQUFPO0VBQ2JnQixZQUFZLEVBQUVOLGdCQUFnQjtFQUM5Qk8sUUFBUSxFQUFFLENBQUMsQ0FBQztFQUNaQyxhQUFhLEVBQUUsU0FBQUEsY0FBQ0MsT0FBWSxFQUFLO0lBQUFoQyxjQUFBLEdBQUFrQixDQUFBO0lBQUFsQixjQUFBLEdBQUFpQixDQUFBO0lBRS9CZSxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsY0FBVSxDQUFDQyxPQUFPLEVBQUUsVUFBQ0MsS0FBVSxFQUFLO01BQUFwQyxjQUFBLEdBQUFrQixDQUFBO01BQUFsQixjQUFBLEdBQUFpQixDQUFBO01BQ2xEbUIsS0FBSyxDQUFDWixjQUFjLEdBQUcsSUFBSTtJQUM3QixDQUFDLENBQUM7SUFBQ3hCLGNBQUEsR0FBQWlCLENBQUE7SUFFSGUsT0FBTyxDQUFDQyxPQUFPLENBQUNDLGNBQVUsQ0FBQ0csU0FBUyxFQUFFLFVBQUNELEtBQVUsRUFBRUUsTUFBVyxFQUFLO01BQUF0QyxjQUFBLEdBQUFrQixDQUFBO01BQUFsQixjQUFBLEdBQUFpQixDQUFBO01BQ2pFbUIsS0FBSyxDQUFDWixjQUFjLEdBQUcsS0FBSztNQUFDeEIsY0FBQSxHQUFBaUIsQ0FBQTtNQUM3Qm1CLEtBQUssQ0FBQ1YsU0FBUyxHQUFHWSxNQUFNLENBQUNDLE9BQU87SUFDbEMsQ0FBQyxDQUFDO0lBQUN2QyxjQUFBLEdBQUFpQixDQUFBO0lBRUhlLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDQyxjQUFVLENBQUNNLFFBQVEsRUFBRSxVQUFDSixLQUFVLEVBQUVFLE1BQVcsRUFBSztNQUFBdEMsY0FBQSxHQUFBa0IsQ0FBQTtNQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtNQUNoRXdCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHFCQUFxQixFQUFFSixNQUFNLENBQUNDLE9BQU8sQ0FBQztNQUFDdkMsY0FBQSxHQUFBaUIsQ0FBQTtNQUNuRG1CLEtBQUssQ0FBQ1gsWUFBWSxHQUFHLElBQUk7SUFDM0IsQ0FBQyxDQUFDO0VBQ0o7QUFDRixDQUFDLENBQUM7QUFBQyxJQUFBa0IsUUFBQSxHQUVZaEIsU0FBUyxDQUFDaUIsT0FBTztBQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FBQUgsUUFBQSJ9