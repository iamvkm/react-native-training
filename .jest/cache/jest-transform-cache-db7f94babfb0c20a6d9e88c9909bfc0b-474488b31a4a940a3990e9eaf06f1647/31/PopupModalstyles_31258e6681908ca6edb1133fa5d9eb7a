194740e4286fbb315e74b7c5acbce8dc
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _colors = _interopRequireDefault(require("../../constants/colors"));
function cov_2a2mv802ds() {
  var path = "D:\\NativeApp\\src\\components\\PopupModal\\PopupModal.styles.ts";
  var hash = "bb7e70c413104eb3132ef75de962639ce9f8b18f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\components\\PopupModal\\PopupModal.styles.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 20,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb7e70c413104eb3132ef75de962639ce9f8b18f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2a2mv802ds = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2a2mv802ds();
var popupModalStyles = (cov_2a2mv802ds().s[0]++, _reactNative.StyleSheet.create({
  modalContainer: {
    height: 200,
    width: 300,
    padding: 20,
    backgroundColor: _colors.default.white,
    borderRadius: 10,
    elevation: 6
  },
  rootContainer: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
    justifyContent: 'center',
    alignItems: 'center'
  }
}));
var _default = popupModalStyles;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2NvbG9ycyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJjb3ZfMmEybXY4MDJkcyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJwb3B1cE1vZGFsU3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsIm1vZGFsQ29udGFpbmVyIiwiaGVpZ2h0Iiwid2lkdGgiLCJwYWRkaW5nIiwiYmFja2dyb3VuZENvbG9yIiwiY29sb3JzIiwid2hpdGUiLCJib3JkZXJSYWRpdXMiLCJlbGV2YXRpb24iLCJyb290Q29udGFpbmVyIiwiZmxleCIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJQb3B1cE1vZGFsLnN0eWxlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0eWxlU2hlZXR9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCBjb2xvcnMgZnJvbSAnLi4vLi4vY29uc3RhbnRzL2NvbG9ycyc7XG5cbmNvbnN0IHBvcHVwTW9kYWxTdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIG1vZGFsQ29udGFpbmVyOiB7XG4gICAgaGVpZ2h0OiAyMDAsXG4gICAgd2lkdGg6IDMwMCxcbiAgICBwYWRkaW5nOiAyMCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy53aGl0ZSxcbiAgICBib3JkZXJSYWRpdXM6IDEwLFxuICAgIGVsZXZhdGlvbjogNixcbiAgfSxcbiAgcm9vdENvbnRhaW5lcjoge1xuICAgIGZsZXg6IDEsXG4gICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjMpJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgcG9wdXBNb2RhbFN0eWxlcztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFBQyxPQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFBNEMsU0FBQUcsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO0lBQUFDLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWYsSUFBQTtFQUFBO0VBQUEsSUFBQWdCLFFBQUEsR0FBQWYsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFhLFFBQUEsQ0FBQWpCLElBQUEsS0FBQWlCLFFBQUEsQ0FBQWpCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFnQixRQUFBLENBQUFqQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFhLGNBQUEsR0FBQUQsUUFBQSxDQUFBakIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFtQixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBbkIsY0FBQTtBQUU1QyxJQUFNb0IsZ0JBQWdCLElBQUFwQixjQUFBLEdBQUFjLENBQUEsT0FBR08sdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQ3pDQyxjQUFjLEVBQUU7SUFDZEMsTUFBTSxFQUFFLEdBQUc7SUFDWEMsS0FBSyxFQUFFLEdBQUc7SUFDVkMsT0FBTyxFQUFFLEVBQUU7SUFDWEMsZUFBZSxFQUFFQyxlQUFNLENBQUNDLEtBQUs7SUFDN0JDLFlBQVksRUFBRSxFQUFFO0lBQ2hCQyxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RDLGFBQWEsRUFBRTtJQUNiQyxJQUFJLEVBQUUsQ0FBQztJQUNQTixlQUFlLEVBQUUsb0JBQW9CO0lBQ3JDTyxjQUFjLEVBQUUsUUFBUTtJQUN4QkMsVUFBVSxFQUFFO0VBQ2Q7QUFDRixDQUFDLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBRVloQixnQkFBZ0I7QUFBQWlCLE9BQUEsQ0FBQUMsT0FBQSxHQUFBRixRQUFBIn0=