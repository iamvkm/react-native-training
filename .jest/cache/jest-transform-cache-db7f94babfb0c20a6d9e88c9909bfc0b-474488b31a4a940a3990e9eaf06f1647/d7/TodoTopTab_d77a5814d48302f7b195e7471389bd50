5bb9a789260d325408b655ce23e1522a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _materialTopTabs = require("@react-navigation/material-top-tabs");
var _screens = require("../screens");
var _colors = _interopRequireDefault(require("../constants/colors"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1d59rxlnt() {
  var path = "D:\\NativeApp\\src\\navigation\\TodoTopTab.tsx";
  var hash = "384f58326fa672db9c8fef648367b30537c1ffe8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\navigation\\TodoTopTab.tsx",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "1": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "2": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 33,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 20
          }
        },
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "384f58326fa672db9c8fef648367b30537c1ffe8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1d59rxlnt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1d59rxlnt();
var TopTab = (cov_1d59rxlnt().s[0]++, (0, _materialTopTabs.createMaterialTopTabNavigator)());
cov_1d59rxlnt().s[1]++;
var TodoTopTab = function TodoTopTab() {
  cov_1d59rxlnt().f[0]++;
  cov_1d59rxlnt().s[2]++;
  return (0, _jsxRuntime.jsxs)(TopTab.Navigator, {
    screenOptions: {
      tabBarIndicatorStyle: {
        backgroundColor: _colors.default.green
      },
      tabBarLabelStyle: {
        textTransform: 'capitalize'
      },
      swipeEnabled: false
    },
    children: [(0, _jsxRuntime.jsx)(TopTab.Screen, {
      name: "AllTabScreen",
      options: {
        tabBarLabel: 'All Tasks'
      },
      component: _screens.AllTab
    }), (0, _jsxRuntime.jsx)(TopTab.Screen, {
      name: "InProgressScreen",
      options: {
        tabBarLabel: 'In Progress'
      },
      component: _screens.InProgressTab
    }), (0, _jsxRuntime.jsx)(TopTab.Screen, {
      name: "CompletedScreen",
      options: {
        tabBarLabel: 'Completed'
      },
      component: _screens.CompletedTab
    })]
  });
};
var _default = TodoTopTab;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9tYXRlcmlhbFRvcFRhYnMiLCJfc2NyZWVucyIsIl9jb2xvcnMiLCJfanN4UnVudGltZSIsImNvdl8xZDU5cnhsbnQiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJUb3BUYWIiLCJjcmVhdGVNYXRlcmlhbFRvcFRhYk5hdmlnYXRvciIsIlRvZG9Ub3BUYWIiLCJqc3hzIiwiTmF2aWdhdG9yIiwic2NyZWVuT3B0aW9ucyIsInRhYkJhckluZGljYXRvclN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwiY29sb3JzIiwiZ3JlZW4iLCJ0YWJCYXJMYWJlbFN0eWxlIiwidGV4dFRyYW5zZm9ybSIsInN3aXBlRW5hYmxlZCIsImNoaWxkcmVuIiwianN4IiwiU2NyZWVuIiwib3B0aW9ucyIsInRhYkJhckxhYmVsIiwiY29tcG9uZW50IiwiQWxsVGFiIiwiSW5Qcm9ncmVzc1RhYiIsIkNvbXBsZXRlZFRhYiIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJUb2RvVG9wVGFiLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtjcmVhdGVNYXRlcmlhbFRvcFRhYk5hdmlnYXRvcn0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbWF0ZXJpYWwtdG9wLXRhYnMnO1xuXG5pbXBvcnQge0FsbFRhYiwgSW5Qcm9ncmVzc1RhYiwgQ29tcGxldGVkVGFifSBmcm9tICcuLi9zY3JlZW5zJztcbmltcG9ydCBjb2xvcnMgZnJvbSAnLi4vY29uc3RhbnRzL2NvbG9ycyc7XG5cbmNvbnN0IFRvcFRhYiA9IGNyZWF0ZU1hdGVyaWFsVG9wVGFiTmF2aWdhdG9yKCk7XG5cbmNvbnN0IFRvZG9Ub3BUYWIgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRvcFRhYi5OYXZpZ2F0b3JcbiAgICAgIHNjcmVlbk9wdGlvbnM9e3tcbiAgICAgICAgdGFiQmFySW5kaWNhdG9yU3R5bGU6IHtiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5ncmVlbn0sXG4gICAgICAgIHRhYkJhckxhYmVsU3R5bGU6IHt0ZXh0VHJhbnNmb3JtOiAnY2FwaXRhbGl6ZSd9LFxuICAgICAgICBzd2lwZUVuYWJsZWQ6IGZhbHNlLFxuICAgICAgfX0+XG4gICAgICA8VG9wVGFiLlNjcmVlblxuICAgICAgICBuYW1lPVwiQWxsVGFiU2NyZWVuXCJcbiAgICAgICAgb3B0aW9ucz17e3RhYkJhckxhYmVsOiAnQWxsIFRhc2tzJ319XG4gICAgICAgIGNvbXBvbmVudD17QWxsVGFifVxuICAgICAgLz5cbiAgICAgIDxUb3BUYWIuU2NyZWVuXG4gICAgICAgIG5hbWU9XCJJblByb2dyZXNzU2NyZWVuXCJcbiAgICAgICAgb3B0aW9ucz17e3RhYkJhckxhYmVsOiAnSW4gUHJvZ3Jlc3MnfX1cbiAgICAgICAgY29tcG9uZW50PXtJblByb2dyZXNzVGFifVxuICAgICAgLz5cbiAgICAgIDxUb3BUYWIuU2NyZWVuXG4gICAgICAgIG5hbWU9XCJDb21wbGV0ZWRTY3JlZW5cIlxuICAgICAgICBvcHRpb25zPXt7dGFiQmFyTGFiZWw6ICdDb21wbGV0ZWQnfX1cbiAgICAgICAgY29tcG9uZW50PXtDb21wbGV0ZWRUYWJ9XG4gICAgICAvPlxuICAgIDwvVG9wVGFiLk5hdmlnYXRvcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRvZG9Ub3BUYWI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0Es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