58f0b279e6cc8d65282cbf34ae1b8b64
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _colors = _interopRequireDefault(require("../../../../constants/colors"));
function cov_stbkyjxej() {
  var path = "D:\\NativeApp\\src\\screens\\Home\\Posts\\PostCard\\PostCard.styles.ts";
  var hash = "6a5e616e1079a7097cd0e5218f5473ac737ce335";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\screens\\Home\\Posts\\PostCard\\PostCard.styles.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 24,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a5e616e1079a7097cd0e5218f5473ac737ce335"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_stbkyjxej = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_stbkyjxej();
var postCardStyles = (cov_stbkyjxej().s[0]++, _reactNative.StyleSheet.create({
  postBody: {
    marginTop: 5,
    fontSize: 14
  },
  titleText: {
    fontSize: 16,
    fontWeight: '700'
  },
  rootContainer: {
    borderWidth: 2,
    borderColor: _colors.default.green,
    padding: 10,
    marginVertical: 8,
    marginHorizontal: 15,
    backgroundColor: _colors.default.white,
    borderRadius: 10,
    elevation: 5
  }
}));
var _default = postCardStyles;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2NvbG9ycyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJjb3Zfc3Ria3lqeGVqIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsInBvc3RDYXJkU3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInBvc3RCb2R5IiwibWFyZ2luVG9wIiwiZm9udFNpemUiLCJ0aXRsZVRleHQiLCJmb250V2VpZ2h0Iiwicm9vdENvbnRhaW5lciIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJjb2xvcnMiLCJncmVlbiIsInBhZGRpbmciLCJtYXJnaW5WZXJ0aWNhbCIsIm1hcmdpbkhvcml6b250YWwiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ3aGl0ZSIsImJvcmRlclJhZGl1cyIsImVsZXZhdGlvbiIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJQb3N0Q2FyZC5zdHlsZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTdHlsZVNoZWV0fSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5pbXBvcnQgY29sb3JzIGZyb20gJy4uLy4uLy4uLy4uL2NvbnN0YW50cy9jb2xvcnMnO1xuXG5jb25zdCBwb3N0Q2FyZFN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgcG9zdEJvZHk6IHtcbiAgICBtYXJnaW5Ub3A6IDUsXG4gICAgZm9udFNpemU6IDE0LFxuICB9LFxuICB0aXRsZVRleHQ6IHtcbiAgICBmb250U2l6ZTogMTYsXG4gICAgZm9udFdlaWdodDogJzcwMCcsXG4gIH0sXG4gIHJvb3RDb250YWluZXI6IHtcbiAgICBib3JkZXJXaWR0aDogMixcbiAgICBib3JkZXJDb2xvcjogY29sb3JzLmdyZWVuLFxuICAgIHBhZGRpbmc6IDEwLFxuICAgIG1hcmdpblZlcnRpY2FsOiA4LFxuICAgIG1hcmdpbkhvcml6b250YWw6IDE1LFxuICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLndoaXRlLFxuICAgIGJvcmRlclJhZGl1czogMTAsXG4gICAgZWxldmF0aW9uOiA1LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHBvc3RDYXJkU3R5bGVzO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUVBLElBQUFDLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUFrRCxTQUFBRyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7SUFBQUMsU0FBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLENBQUE7SUFBQUMsZUFBQTtJQUFBZixJQUFBO0VBQUE7RUFBQSxJQUFBZ0IsUUFBQSxHQUFBZixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWEsUUFBQSxDQUFBakIsSUFBQSxLQUFBaUIsUUFBQSxDQUFBakIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQWdCLFFBQUEsQ0FBQWpCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWEsY0FBQSxHQUFBRCxRQUFBLENBQUFqQixJQUFBO0VBQUE7SUFBQUQsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQW1CLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFuQixhQUFBO0FBRWxELElBQU1vQixjQUFjLElBQUFwQixhQUFBLEdBQUFjLENBQUEsT0FBR08sdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQ3ZDQyxRQUFRLEVBQUU7SUFDUkMsU0FBUyxFQUFFLENBQUM7SUFDWkMsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNEQyxTQUFTLEVBQUU7SUFDVEQsUUFBUSxFQUFFLEVBQUU7SUFDWkUsVUFBVSxFQUFFO0VBQ2QsQ0FBQztFQUNEQyxhQUFhLEVBQUU7SUFDYkMsV0FBVyxFQUFFLENBQUM7SUFDZEMsV0FBVyxFQUFFQyxlQUFNLENBQUNDLEtBQUs7SUFDekJDLE9BQU8sRUFBRSxFQUFFO0lBQ1hDLGNBQWMsRUFBRSxDQUFDO0lBQ2pCQyxnQkFBZ0IsRUFBRSxFQUFFO0lBQ3BCQyxlQUFlLEVBQUVMLGVBQU0sQ0FBQ00sS0FBSztJQUM3QkMsWUFBWSxFQUFFLEVBQUU7SUFDaEJDLFNBQVMsRUFBRTtFQUNiO0FBQ0YsQ0FBQyxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUVZcEIsY0FBYztBQUFBcUIsT0FBQSxDQUFBQyxPQUFBLEdBQUFGLFFBQUEifQ==