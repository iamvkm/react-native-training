23ac5c2b66dd4bc724e76010b7f9f50f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _native = require("@react-navigation/native");
var _components = require("../../../../components");
var _global = require("../../../../constants/global.constants");
var _SearchBar = _interopRequireDefault(require("../../../Home/SearchBar/SearchBar.styles"));
var _storePinInLocal = require("../../../../utils/storePinInLocal");
var _global2 = _interopRequireDefault(require("../../../../constants/global.numbers"));
var _screen = _interopRequireDefault(require("../../../../constants/screen.routes"));
var _SignOutSheet = _interopRequireDefault(require("./SignOutSheet.styles"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_qho59h14() {
  var path = "D:\\NativeApp\\src\\screens\\Profile\\ProfileMenu\\SignOutSheet\\SignOutSheet.tsx";
  var hash = "54c61b00ceabde706da0339a82af8595cd7944bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\screens\\Profile\\ProfileMenu\\SignOutSheet\\SignOutSheet.tsx",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "2": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 26
        }
      },
      "3": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "4": {
        start: {
          line: 21,
          column: 39
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "5": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "6": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "7": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "8": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "9": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "10": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 63,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 22
          }
        },
        loc: {
          start: {
            line: 13,
            column: 37
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 28
          }
        },
        loc: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 63
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 44
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 16
          }
        },
        loc: {
          start: {
            line: 31,
            column: 21
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "54c61b00ceabde706da0339a82af8595cd7944bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_qho59h14 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qho59h14();
cov_qho59h14().s[0]++;
var SignOutSheet = function SignOutSheet(props) {
  cov_qho59h14().f[0]++;
  var navigation = (cov_qho59h14().s[1]++, (0, _native.useNavigation)());
  var _ref = (cov_qho59h14().s[2]++, props),
    sheetRef = _ref.sheetRef;
  cov_qho59h14().s[3]++;
  var closeBottomSheet = function closeBottomSheet() {
    var _sheetRef$current;
    cov_qho59h14().f[1]++;
    cov_qho59h14().s[4]++;
    return (_sheetRef$current = sheetRef.current) == null ? void 0 : _sheetRef$current.hide();
  };
  cov_qho59h14().s[5]++;
  var onSignOutPressHandler = function onSignOutPressHandler() {
    cov_qho59h14().f[2]++;
    cov_qho59h14().s[6]++;
    (0, _storePinInLocal.storePinInLocal)(null);
    cov_qho59h14().s[7]++;
    closeBottomSheet();
    cov_qho59h14().s[8]++;
    setTimeout(function () {
      cov_qho59h14().f[3]++;
      cov_qho59h14().s[9]++;
      navigation.navigate(_screen.default.LandingScreen);
    }, _global2.default.profileMenu.navigateDelay);
  };
  cov_qho59h14().s[10]++;
  return (0, _jsxRuntime.jsx)(_components.BottomSheet, {
    sheetRef: sheetRef,
    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: _SignOutSheet.default.headerContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _SignOutSheet.default.signOutText,
          children: "Sign Out"
        }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
          onPress: closeBottomSheet,
          style: _SearchBar.default.crossContainer,
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: _SearchBar.default.crossText,
            children: _global.crossText
          })
        })]
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: _SignOutSheet.default.bodyContainer,
        children: "Are you sure you want to sign out ? Your existing PIN will not be valid after this."
      }), (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: _SignOutSheet.default.footerContainer,
        children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
          style: _SignOutSheet.default.yesButtonContainer,
          onPress: onSignOutPressHandler,
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: _SignOutSheet.default.yesText,
            children: "Yes"
          })
        })
      })]
    })
  });
};
var _default = SignOutSheet;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,