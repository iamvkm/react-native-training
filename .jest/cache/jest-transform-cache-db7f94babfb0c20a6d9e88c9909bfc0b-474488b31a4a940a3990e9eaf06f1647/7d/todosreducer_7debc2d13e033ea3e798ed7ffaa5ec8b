dad9d85f7fc5f32b4a1dbf277e9b0983
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _todos = _interopRequireDefault(require("./todos.api"));
function cov_2lo8lymbty() {
  var path = "D:\\NativeApp\\src\\redux\\todos\\todos.reducer.ts";
  var hash = "7ca5a0d9b29f74092e049b81fd4fde03217420c9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\redux\\todos\\todos.reducer.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 42
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "2": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "3": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "4": {
        start: {
          line: 24,
          column: 46
        },
        end: {
          line: 24,
          column: 60
        }
      },
      "5": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 63
        }
      },
      "6": {
        start: {
          line: 26,
          column: 46
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "7": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "8": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 7
        }
      },
      "9": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "10": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "11": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "12": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 35
        }
      },
      "13": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 37
        }
      },
      "14": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 68
        }
      },
      "15": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "16": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "17": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "18": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 51,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 22,
            column: 26
          }
        },
        loc: {
          start: {
            line: 22,
            column: 72
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 27
          }
        },
        loc: {
          start: {
            line: 24,
            column: 46
          },
          end: {
            line: 24,
            column: 60
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 27
          }
        },
        loc: {
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 26,
            column: 61
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 18
          }
        },
        loc: {
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 36,
            column: 41
          }
        },
        loc: {
          start: {
            line: 36,
            column: 56
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 40,
            column: 43
          }
        },
        loc: {
          start: {
            line: 40,
            column: 71
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 41
          },
          end: {
            line: 49,
            column: 42
          }
        },
        loc: {
          start: {
            line: 49,
            column: 70
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        }, {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 27,
            column: 3
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7ca5a0d9b29f74092e049b81fd4fde03217420c9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2lo8lymbty = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lo8lymbty();
var initialTodoState = (cov_2lo8lymbty().s[0]++, {
  isTodosLoading: false,
  isTodosError: false,
  inProgressTodos: [],
  completedTodos: [],
  todosData: []
});
cov_2lo8lymbty().s[1]++;
var getFilteredTodos = function getFilteredTodos(apiData, isCompleted) {
  cov_2lo8lymbty().f[0]++;
  cov_2lo8lymbty().s[2]++;
  if (isCompleted) {
    cov_2lo8lymbty().b[0][0]++;
    cov_2lo8lymbty().s[3]++;
    return apiData.filter(function (todo) {
      cov_2lo8lymbty().f[1]++;
      cov_2lo8lymbty().s[4]++;
      return todo.completed;
    });
  } else {
    cov_2lo8lymbty().b[0][1]++;
    cov_2lo8lymbty().s[5]++;
    return apiData.filter(function (todo) {
      cov_2lo8lymbty().f[2]++;
      cov_2lo8lymbty().s[6]++;
      return !todo.completed;
    });
  }
};
var todoSlice = (cov_2lo8lymbty().s[7]++, (0, _toolkit.createSlice)({
  name: 'todos',
  initialState: initialTodoState,
  reducers: {},
  extraReducers: function extraReducers(builder) {
    cov_2lo8lymbty().f[3]++;
    cov_2lo8lymbty().s[8]++;
    builder.addCase(_todos.default.pending, function (state) {
      cov_2lo8lymbty().f[4]++;
      cov_2lo8lymbty().s[9]++;
      state.isTodosLoading = true;
    });
    cov_2lo8lymbty().s[10]++;
    builder.addCase(_todos.default.fulfilled, function (state, action) {
      cov_2lo8lymbty().f[5]++;
      var allTodosData = (cov_2lo8lymbty().s[11]++, action.payload);
      cov_2lo8lymbty().s[12]++;
      state.isTodosLoading = false;
      cov_2lo8lymbty().s[13]++;
      state.todosData = allTodosData;
      cov_2lo8lymbty().s[14]++;
      state.inProgressTodos = getFilteredTodos(allTodosData, false);
      cov_2lo8lymbty().s[15]++;
      state.completedTodos = getFilteredTodos(allTodosData, true);
    });
    cov_2lo8lymbty().s[16]++;
    builder.addCase(_todos.default.rejected, function (state, action) {
      cov_2lo8lymbty().f[6]++;
      cov_2lo8lymbty().s[17]++;
      console.log('todos fetch error: ', action.payload);
      cov_2lo8lymbty().s[18]++;
      state.isTodosError = true;
    });
  }
}));
var _default = todoSlice.reducer;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,