29f9acd2178761f614fcbbb32bc2aa12
module.exports = {
  get BatchedBridge() {
    return require('../BatchedBridge/BatchedBridge');
  },
  get ExceptionsManager() {
    return require('../Core/ExceptionsManager');
  },
  get Platform() {
    return require('../Utilities/Platform');
  },
  get RCTEventEmitter() {
    return require('../EventEmitter/RCTEventEmitter');
  },
  get ReactNativeViewConfigRegistry() {
    return require('../Renderer/shims/ReactNativeViewConfigRegistry');
  },
  get TextInputState() {
    return require('../Components/TextInput/TextInputState');
  },
  get UIManager() {
    return require('../ReactNative/UIManager');
  },
  get deepDiffer() {
    return require('../Utilities/differ/deepDiffer');
  },
  get deepFreezeAndThrowOnMutationInDev() {
    return require('../Utilities/deepFreezeAndThrowOnMutationInDev');
  },
  get flattenStyle() {
    return require('../StyleSheet/flattenStyle');
  },
  get ReactFiberErrorDialog() {
    return require('../Core/ReactFiberErrorDialog').default;
  },
  get legacySendAccessibilityEvent() {
    return require('../Components/AccessibilityInfo/legacySendAccessibilityEvent');
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQmF0Y2hlZEJyaWRnZSIsInJlcXVpcmUiLCJFeGNlcHRpb25zTWFuYWdlciIsIlBsYXRmb3JtIiwiUkNURXZlbnRFbWl0dGVyIiwiUmVhY3ROYXRpdmVWaWV3Q29uZmlnUmVnaXN0cnkiLCJUZXh0SW5wdXRTdGF0ZSIsIlVJTWFuYWdlciIsImRlZXBEaWZmZXIiLCJkZWVwRnJlZXplQW5kVGhyb3dPbk11dGF0aW9uSW5EZXYiLCJmbGF0dGVuU3R5bGUiLCJSZWFjdEZpYmVyRXJyb3JEaWFsb2ciLCJkZWZhdWx0IiwibGVnYWN5U2VuZEFjY2Vzc2liaWxpdHlFdmVudCJdLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlUHJpdmF0ZUludGVyZmFjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKi9cblxuaW1wb3J0IHR5cGVvZiBCYXRjaGVkQnJpZGdlIGZyb20gJy4uL0JhdGNoZWRCcmlkZ2UvQmF0Y2hlZEJyaWRnZSc7XG5pbXBvcnQgdHlwZW9mIEV4Y2VwdGlvbnNNYW5hZ2VyIGZyb20gJy4uL0NvcmUvRXhjZXB0aW9uc01hbmFnZXInO1xuaW1wb3J0IHR5cGVvZiBQbGF0Zm9ybSBmcm9tICcuLi9VdGlsaXRpZXMvUGxhdGZvcm0nO1xuaW1wb3J0IHR5cGVvZiBSQ1RFdmVudEVtaXR0ZXIgZnJvbSAnLi4vRXZlbnRFbWl0dGVyL1JDVEV2ZW50RW1pdHRlcic7XG5pbXBvcnQgdHlwZW9mIFJlYWN0TmF0aXZlVmlld0NvbmZpZ1JlZ2lzdHJ5IGZyb20gJy4uL1JlbmRlcmVyL3NoaW1zL1JlYWN0TmF0aXZlVmlld0NvbmZpZ1JlZ2lzdHJ5JztcbmltcG9ydCB0eXBlb2YgVGV4dElucHV0U3RhdGUgZnJvbSAnLi4vQ29tcG9uZW50cy9UZXh0SW5wdXQvVGV4dElucHV0U3RhdGUnO1xuaW1wb3J0IHR5cGVvZiBVSU1hbmFnZXIgZnJvbSAnLi4vUmVhY3ROYXRpdmUvVUlNYW5hZ2VyJztcbmltcG9ydCB0eXBlb2YgZGVlcERpZmZlciBmcm9tICcuLi9VdGlsaXRpZXMvZGlmZmVyL2RlZXBEaWZmZXInO1xuaW1wb3J0IHR5cGVvZiBkZWVwRnJlZXplQW5kVGhyb3dPbk11dGF0aW9uSW5EZXYgZnJvbSAnLi4vVXRpbGl0aWVzL2RlZXBGcmVlemVBbmRUaHJvd09uTXV0YXRpb25JbkRldic7XG5pbXBvcnQgdHlwZW9mIGZsYXR0ZW5TdHlsZSBmcm9tICcuLi9TdHlsZVNoZWV0L2ZsYXR0ZW5TdHlsZSc7XG5pbXBvcnQge3R5cGUgRGFuZ2Vyb3VzbHlJbXByZWNpc2VTdHlsZVByb3B9IGZyb20gJy4uL1N0eWxlU2hlZXQvU3R5bGVTaGVldCc7XG5pbXBvcnQgdHlwZW9mIFJlYWN0RmliZXJFcnJvckRpYWxvZyBmcm9tICcuLi9Db3JlL1JlYWN0RmliZXJFcnJvckRpYWxvZyc7XG5pbXBvcnQgdHlwZW9mIGxlZ2FjeVNlbmRBY2Nlc3NpYmlsaXR5RXZlbnQgZnJvbSAnLi4vQ29tcG9uZW50cy9BY2Nlc3NpYmlsaXR5SW5mby9sZWdhY3lTZW5kQWNjZXNzaWJpbGl0eUV2ZW50JztcblxuLy8gZmxvd2xpbnQgdW5zYWZlLWdldHRlcnMtc2V0dGVyczpvZmZcbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXQgQmF0Y2hlZEJyaWRnZSgpOiBCYXRjaGVkQnJpZGdlIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi4vQmF0Y2hlZEJyaWRnZS9CYXRjaGVkQnJpZGdlJyk7XG4gIH0sXG4gIGdldCBFeGNlcHRpb25zTWFuYWdlcigpOiBFeGNlcHRpb25zTWFuYWdlciB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4uL0NvcmUvRXhjZXB0aW9uc01hbmFnZXInKTtcbiAgfSxcbiAgZ2V0IFBsYXRmb3JtKCk6IFBsYXRmb3JtIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi4vVXRpbGl0aWVzL1BsYXRmb3JtJyk7XG4gIH0sXG4gIGdldCBSQ1RFdmVudEVtaXR0ZXIoKTogUkNURXZlbnRFbWl0dGVyIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi4vRXZlbnRFbWl0dGVyL1JDVEV2ZW50RW1pdHRlcicpO1xuICB9LFxuICBnZXQgUmVhY3ROYXRpdmVWaWV3Q29uZmlnUmVnaXN0cnkoKTogUmVhY3ROYXRpdmVWaWV3Q29uZmlnUmVnaXN0cnkge1xuICAgIHJldHVybiByZXF1aXJlKCcuLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVZpZXdDb25maWdSZWdpc3RyeScpO1xuICB9LFxuICBnZXQgVGV4dElucHV0U3RhdGUoKTogVGV4dElucHV0U3RhdGUge1xuICAgIHJldHVybiByZXF1aXJlKCcuLi9Db21wb25lbnRzL1RleHRJbnB1dC9UZXh0SW5wdXRTdGF0ZScpO1xuICB9LFxuICBnZXQgVUlNYW5hZ2VyKCk6IFVJTWFuYWdlciB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4uL1JlYWN0TmF0aXZlL1VJTWFuYWdlcicpO1xuICB9LFxuICBnZXQgZGVlcERpZmZlcigpOiBkZWVwRGlmZmVyIHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi4vVXRpbGl0aWVzL2RpZmZlci9kZWVwRGlmZmVyJyk7XG4gIH0sXG4gIGdldCBkZWVwRnJlZXplQW5kVGhyb3dPbk11dGF0aW9uSW5EZXYoKTogZGVlcEZyZWV6ZUFuZFRocm93T25NdXRhdGlvbkluRGV2PFxuICAgIHsuLi59IHwgQXJyYXk8bWl4ZWQ+LFxuICA+IHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi4vVXRpbGl0aWVzL2RlZXBGcmVlemVBbmRUaHJvd09uTXV0YXRpb25JbkRldicpO1xuICB9LFxuICBnZXQgZmxhdHRlblN0eWxlKCk6IGZsYXR0ZW5TdHlsZTxEYW5nZXJvdXNseUltcHJlY2lzZVN0eWxlUHJvcD4ge1xuICAgIHJldHVybiByZXF1aXJlKCcuLi9TdHlsZVNoZWV0L2ZsYXR0ZW5TdHlsZScpO1xuICB9LFxuICBnZXQgUmVhY3RGaWJlckVycm9yRGlhbG9nKCk6IFJlYWN0RmliZXJFcnJvckRpYWxvZyB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4uL0NvcmUvUmVhY3RGaWJlckVycm9yRGlhbG9nJykuZGVmYXVsdDtcbiAgfSxcbiAgZ2V0IGxlZ2FjeVNlbmRBY2Nlc3NpYmlsaXR5RXZlbnQoKTogbGVnYWN5U2VuZEFjY2Vzc2liaWxpdHlFdmVudCB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4uL0NvbXBvbmVudHMvQWNjZXNzaWJpbGl0eUluZm8vbGVnYWN5U2VuZEFjY2Vzc2liaWxpdHlFdmVudCcpO1xuICB9LFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBeUJBQSxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmLElBQUlDLGFBQWFBLENBQUEsRUFBa0I7SUFDakMsT0FBT0MsT0FBTyxDQUFDLGdDQUFnQyxDQUFDO0VBQ2xELENBQUM7RUFDRCxJQUFJQyxpQkFBaUJBLENBQUEsRUFBc0I7SUFDekMsT0FBT0QsT0FBTyxDQUFDLDJCQUEyQixDQUFDO0VBQzdDLENBQUM7RUFDRCxJQUFJRSxRQUFRQSxDQUFBLEVBQWE7SUFDdkIsT0FBT0YsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0VBQ3pDLENBQUM7RUFDRCxJQUFJRyxlQUFlQSxDQUFBLEVBQW9CO0lBQ3JDLE9BQU9ILE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQztFQUNuRCxDQUFDO0VBQ0QsSUFBSUksNkJBQTZCQSxDQUFBLEVBQWtDO0lBQ2pFLE9BQU9KLE9BQU8sQ0FBQyxpREFBaUQsQ0FBQztFQUNuRSxDQUFDO0VBQ0QsSUFBSUssY0FBY0EsQ0FBQSxFQUFtQjtJQUNuQyxPQUFPTCxPQUFPLENBQUMsd0NBQXdDLENBQUM7RUFDMUQsQ0FBQztFQUNELElBQUlNLFNBQVNBLENBQUEsRUFBYztJQUN6QixPQUFPTixPQUFPLENBQUMsMEJBQTBCLENBQUM7RUFDNUMsQ0FBQztFQUNELElBQUlPLFVBQVVBLENBQUEsRUFBZTtJQUMzQixPQUFPUCxPQUFPLENBQUMsZ0NBQWdDLENBQUM7RUFDbEQsQ0FBQztFQUNELElBQUlRLGlDQUFpQ0EsQ0FBQSxFQUVuQztJQUNBLE9BQU9SLE9BQU8sQ0FBQyxnREFBZ0QsQ0FBQztFQUNsRSxDQUFDO0VBQ0QsSUFBSVMsWUFBWUEsQ0FBQSxFQUFnRDtJQUM5RCxPQUFPVCxPQUFPLENBQUMsNEJBQTRCLENBQUM7RUFDOUMsQ0FBQztFQUNELElBQUlVLHFCQUFxQkEsQ0FBQSxFQUEwQjtJQUNqRCxPQUFPVixPQUFPLENBQUMsK0JBQStCLENBQUMsQ0FBQ1csT0FBTztFQUN6RCxDQUFDO0VBQ0QsSUFBSUMsNEJBQTRCQSxDQUFBLEVBQWlDO0lBQy9ELE9BQU9aLE9BQU8sQ0FBQyw4REFBOEQsQ0FBQztFQUNoRjtBQUNGLENBQUMifQ==