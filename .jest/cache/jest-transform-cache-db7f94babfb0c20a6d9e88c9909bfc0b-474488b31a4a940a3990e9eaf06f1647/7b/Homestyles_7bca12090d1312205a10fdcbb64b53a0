635a21a3b226dbb6ae103269506349ce
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _colors = _interopRequireDefault(require("../../constants/colors"));
function cov_2ipajyzra3() {
  var path = "D:\\NativeApp\\src\\screens\\Home\\Home.styles.ts";
  var hash = "12eef967aaf73ab6522bc4cff24174861a477d4b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\screens\\Home\\Home.styles.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 28
        },
        end: {
          line: 23,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "12eef967aaf73ab6522bc4cff24174861a477d4b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2ipajyzra3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ipajyzra3();
var landingScreenStyles = (cov_2ipajyzra3().s[0]++, _reactNative.StyleSheet.create({
  welcomeText: {
    fontSize: 24,
    paddingLeft: 16,
    color: _colors.default.green,
    fontWeight: '700',
    paddingTop: 10
  },
  textMessage: {
    fontSize: 18,
    fontWeight: '600',
    marginHorizontal: 10
  },
  rootContainer: {
    flex: 1,
    backgroundColor: '#eee',
    paddingVertical: 10
  }
}));
var _default = landingScreenStyles;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2NvbG9ycyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJjb3ZfMmlwYWp5enJhMyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJsYW5kaW5nU2NyZWVuU3R5bGVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsIndlbGNvbWVUZXh0IiwiZm9udFNpemUiLCJwYWRkaW5nTGVmdCIsImNvbG9yIiwiY29sb3JzIiwiZ3JlZW4iLCJmb250V2VpZ2h0IiwicGFkZGluZ1RvcCIsInRleHRNZXNzYWdlIiwibWFyZ2luSG9yaXpvbnRhbCIsInJvb3RDb250YWluZXIiLCJmbGV4IiwiYmFja2dyb3VuZENvbG9yIiwicGFkZGluZ1ZlcnRpY2FsIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIkhvbWUuc3R5bGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U3R5bGVTaGVldH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuaW1wb3J0IGNvbG9ycyBmcm9tICcuLi8uLi9jb25zdGFudHMvY29sb3JzJztcblxuY29uc3QgbGFuZGluZ1NjcmVlblN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgd2VsY29tZVRleHQ6IHtcbiAgICBmb250U2l6ZTogMjQsXG4gICAgcGFkZGluZ0xlZnQ6IDE2LFxuICAgIGNvbG9yOiBjb2xvcnMuZ3JlZW4sXG4gICAgZm9udFdlaWdodDogJzcwMCcsXG4gICAgcGFkZGluZ1RvcDogMTAsXG4gIH0sXG4gIHRleHRNZXNzYWdlOiB7XG4gICAgZm9udFNpemU6IDE4LFxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIG1hcmdpbkhvcml6b250YWw6IDEwLFxuICB9LFxuICByb290Q29udGFpbmVyOiB7XG4gICAgZmxleDogMSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZWVlJyxcbiAgICBwYWRkaW5nVmVydGljYWw6IDEwLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGxhbmRpbmdTY3JlZW5TdHlsZXM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBQUMsT0FBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQTRDLFNBQUFHLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtJQUFBQyxTQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsQ0FBQTtJQUFBQyxlQUFBO0lBQUFmLElBQUE7RUFBQTtFQUFBLElBQUFnQixRQUFBLEdBQUFmLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBYSxRQUFBLENBQUFqQixJQUFBLEtBQUFpQixRQUFBLENBQUFqQixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBZ0IsUUFBQSxDQUFBakIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBYSxjQUFBLEdBQUFELFFBQUEsQ0FBQWpCLElBQUE7RUFBQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBbUIsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQW5CLGNBQUE7QUFFNUMsSUFBTW9CLG1CQUFtQixJQUFBcEIsY0FBQSxHQUFBYyxDQUFBLE9BQUdPLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztFQUM1Q0MsV0FBVyxFQUFFO0lBQ1hDLFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFdBQVcsRUFBRSxFQUFFO0lBQ2ZDLEtBQUssRUFBRUMsZUFBTSxDQUFDQyxLQUFLO0lBQ25CQyxVQUFVLEVBQUUsS0FBSztJQUNqQkMsVUFBVSxFQUFFO0VBQ2QsQ0FBQztFQUNEQyxXQUFXLEVBQUU7SUFDWFAsUUFBUSxFQUFFLEVBQUU7SUFDWkssVUFBVSxFQUFFLEtBQUs7SUFDakJHLGdCQUFnQixFQUFFO0VBQ3BCLENBQUM7RUFDREMsYUFBYSxFQUFFO0lBQ2JDLElBQUksRUFBRSxDQUFDO0lBQ1BDLGVBQWUsRUFBRSxNQUFNO0lBQ3ZCQyxlQUFlLEVBQUU7RUFDbkI7QUFDRixDQUFDLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBRVlqQixtQkFBbUI7QUFBQWtCLE9BQUEsQ0FBQUMsT0FBQSxHQUFBRixRQUFBIn0=