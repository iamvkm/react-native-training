748ed1de9a58bb460edbd8de7b9b18a9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
var _SignOutModal = _interopRequireDefault(require("./SignOutModal.styles"));
var _global = _interopRequireDefault(require("../../../../constants/global.strings"));
var _screen = _interopRequireDefault(require("../../../../constants/screen.routes"));
var _native = require("@react-navigation/native");
var _storePinInLocal = require("../../../../utils/storePinInLocal");
var _components = require("../../../../components");
var _jsxRuntime = require("react/jsx-runtime");
function cov_1cr0a7qjor() {
  var path = "D:\\NativeApp\\src\\screens\\Profile\\ProfileMenu\\SignOutModal\\SignOutModal.tsx";
  var hash = "3c4a3bd63f7ec719d03b3d44e9ee1c29a3dbc2fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\screens\\Profile\\ProfileMenu\\SignOutModal\\SignOutModal.tsx",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 45
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "2": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "3": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 17
        }
      },
      "5": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "6": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "7": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 60,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 46
          }
        },
        loc: {
          start: {
            line: 17,
            column: 76
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 25
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c4a3bd63f7ec719d03b3d44e9ee1c29a3dbc2fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1cr0a7qjor = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cr0a7qjor();
cov_1cr0a7qjor().s[0]++;
var SignOutModal = function SignOutModal(signOutProps) {
  cov_1cr0a7qjor().f[0]++;
  var navigation = (cov_1cr0a7qjor().s[1]++, (0, _native.useNavigation)());
  var _ref = (cov_1cr0a7qjor().s[2]++, signOutProps),
    isModalVisible = _ref.isModalVisible,
    closeModal = _ref.closeModal;
  cov_1cr0a7qjor().s[3]++;
  var onSignOutPressHandler = function onSignOutPressHandler() {
    cov_1cr0a7qjor().f[1]++;
    cov_1cr0a7qjor().s[4]++;
    closeModal();
    cov_1cr0a7qjor().s[5]++;
    navigation.navigate(_screen.default.LandingScreen);
    cov_1cr0a7qjor().s[6]++;
    (0, _storePinInLocal.storePinInLocal)(null);
  };
  cov_1cr0a7qjor().s[7]++;
  return (0, _jsxRuntime.jsx)(_components.PopupModal, {
    isModalVisible: isModalVisible,
    children: (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: _SignOutModal.default.headerContainer,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _SignOutModal.default.headerText,
          children: _global.default.signOutModal.signOut
        }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
          onPress: closeModal,
          style: _SignOutModal.default.crossIcon,
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: _SignOutModal.default.crossText,
            children: _global.default.signOutModal.crossText
          })
        })]
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: _SignOutModal.default.bodyText,
        children: _global.default.signOutModal.signOutMessage
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        onPress: onSignOutPressHandler,
        style: _SignOutModal.default.buttonContainer,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: _SignOutModal.default.buttonText,
          children: _global.default.signOutModal.yes
        })
      })]
    })
  });
};
var _default = SignOutModal;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,