{"version":3,"names":["_ReactNative","require","codegenNativeCommands","options","commandObj","supportedCommands","forEach","command","ref","_len","arguments","length","args","Array","_key","dispatchCommand","_default","exports","default"],"sources":["codegenNativeCommands.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport {dispatchCommand} from '../../Libraries/Renderer/shims/ReactNative';\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj = {};\n\n  options.supportedCommands.forEach(command => {\n    commandObj[command] = (ref, ...args) => {\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n"],"mappings":";;;;AAUA,IAAAA,YAAA,GAAAC,OAAA;AAMA,SAASC,qBAAqBA,CAAkBC,OAA0B,EAAK;EAC7E,IAAMC,UAAU,GAAG,CAAC,CAAC;EAErBD,OAAO,CAACE,iBAAiB,CAACC,OAAO,CAAC,UAAAC,OAAO,EAAI;IAC3CH,UAAU,CAACG,OAAO,CAAC,GAAG,UAACC,GAAG,EAAc;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MACjC,IAAAC,4BAAe,EAACP,GAAG,EAAED,OAAO,EAAEK,IAAI,CAAC;IACrC,CAAC;EACH,CAAC,CAAC;EAEF,OAASR,UAAU;AACrB;AAAC,IAAAY,QAAA,GAEcd,qBAAqB;AAAAe,OAAA,CAAAC,OAAA,GAAAF,QAAA"}