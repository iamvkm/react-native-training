0b3eeb19cddc24e747c8669e23227247
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
var _SearchBar = _interopRequireDefault(require("./SearchBar.styles"));
var _global = _interopRequireDefault(require("../../../constants/global.strings"));
var _global2 = _interopRequireDefault(require("../../../constants/global.urls"));
var _CrossIcon = require("../../../components/CrossIcon");
var _jsxRuntime = require("react/jsx-runtime");
function cov_t0y469ww1() {
  var path = "D:\\NativeApp\\src\\screens\\Home\\SearchBar\\SearchBar.tsx";
  var hash = "27cb18e84781243a216fcaeafa550a3374af817f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\screens\\Home\\SearchBar\\SearchBar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 48
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 38
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "2": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 39,
          column: 4
        }
      },
      "3": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 48
          },
          end: {
            line: 14,
            column: 49
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 41
          }
        },
        line: 31
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27cb18e84781243a216fcaeafa550a3374af817f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_t0y469ww1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t0y469ww1();
cov_t0y469ww1().s[0]++;
var SearchBar = function SearchBar(searchBarProps) {
  cov_t0y469ww1().f[0]++;
  var _ref = (cov_t0y469ww1().s[1]++, searchBarProps),
    searchText = _ref.searchText,
    setSearchText = _ref.setSearchText;
  cov_t0y469ww1().s[2]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: _SearchBar.default.rootContainer,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: _SearchBar.default.searchContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.TextInput, {
        value: searchText,
        onChangeText: setSearchText,
        style: _SearchBar.default.searchText,
        placeholder: _global.default.searchBar.inputPlaceholder
      }), (0, _jsxRuntime.jsx)(_CrossIcon.CrossIcon, {
        searchText: searchText,
        setSearchText: setSearchText
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        cov_t0y469ww1().f[1]++;
        cov_t0y469ww1().s[3]++;
        return _reactNative.Keyboard.dismiss();
      },
      style: _SearchBar.default.imageContainer,
      children: (0, _jsxRuntime.jsx)(_reactNative.Image, {
        style: _SearchBar.default.iconSize,
        source: {
          uri: _global2.default.searchBar.searchIcon
        }
      })
    })]
  });
};
var _default = SearchBar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9TZWFyY2hCYXIiLCJfZ2xvYmFsIiwiX2dsb2JhbDIiLCJfQ3Jvc3NJY29uIiwiX2pzeFJ1bnRpbWUiLCJjb3ZfdDB5NDY5d3cxIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiU2VhcmNoQmFyIiwic2VhcmNoQmFyUHJvcHMiLCJfcmVmIiwic2VhcmNoVGV4dCIsInNldFNlYXJjaFRleHQiLCJqc3hzIiwiVmlldyIsInN0eWxlIiwic2VhcmNoQmFyU3R5bGVzIiwicm9vdENvbnRhaW5lciIsImNoaWxkcmVuIiwic2VhcmNoQ29udGFpbmVyIiwianN4IiwiVGV4dElucHV0IiwidmFsdWUiLCJvbkNoYW5nZVRleHQiLCJwbGFjZWhvbGRlciIsImxvY2FsU3RyaW5ncyIsInNlYXJjaEJhciIsImlucHV0UGxhY2Vob2xkZXIiLCJDcm9zc0ljb24iLCJUb3VjaGFibGVPcGFjaXR5Iiwib25QcmVzcyIsIktleWJvYXJkIiwiZGlzbWlzcyIsImltYWdlQ29udGFpbmVyIiwiSW1hZ2UiLCJpY29uU2l6ZSIsInNvdXJjZSIsInVyaSIsImxvY2FsVXJscyIsInNlYXJjaEljb24iLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiU2VhcmNoQmFyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ltYWdlLCBLZXlib2FyZCwgVGV4dElucHV0LCBUb3VjaGFibGVPcGFjaXR5LCBWaWV3fSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHNlYXJjaEJhclN0eWxlcyBmcm9tICcuL1NlYXJjaEJhci5zdHlsZXMnO1xuaW1wb3J0IHtTZWFyY2hCYXJQcm9wc1R5cGV9IGZyb20gJy4vc2VhcmNoQmFyLnR5cGUnO1xuaW1wb3J0IGxvY2FsU3RyaW5ncyBmcm9tICcuLi8uLi8uLi9jb25zdGFudHMvZ2xvYmFsLnN0cmluZ3MnO1xuaW1wb3J0IGxvY2FsVXJscyBmcm9tICcuLi8uLi8uLi9jb25zdGFudHMvZ2xvYmFsLnVybHMnO1xuaW1wb3J0IHtDcm9zc0ljb259IGZyb20gJy4uLy4uLy4uL2NvbXBvbmVudHMvQ3Jvc3NJY29uJztcblxuLyoqXG4gKiBjb21wb25lbnQgdG8gc2hvdyBzZWFyY2ggYmFyXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9XG4gKi9cbmNvbnN0IFNlYXJjaEJhcjogUmVhY3QuRkM8U2VhcmNoQmFyUHJvcHNUeXBlPiA9IChcbiAgc2VhcmNoQmFyUHJvcHM6IFNlYXJjaEJhclByb3BzVHlwZSxcbik6IEpTWC5FbGVtZW50ID0+IHtcbiAgY29uc3Qge3NlYXJjaFRleHQsIHNldFNlYXJjaFRleHR9ID0gc2VhcmNoQmFyUHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8VmlldyBzdHlsZT17c2VhcmNoQmFyU3R5bGVzLnJvb3RDb250YWluZXJ9PlxuICAgICAgPFZpZXcgc3R5bGU9e3NlYXJjaEJhclN0eWxlcy5zZWFyY2hDb250YWluZXJ9PlxuICAgICAgICA8VGV4dElucHV0XG4gICAgICAgICAgdmFsdWU9e3NlYXJjaFRleHR9XG4gICAgICAgICAgb25DaGFuZ2VUZXh0PXtzZXRTZWFyY2hUZXh0fVxuICAgICAgICAgIHN0eWxlPXtzZWFyY2hCYXJTdHlsZXMuc2VhcmNoVGV4dH1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17bG9jYWxTdHJpbmdzLnNlYXJjaEJhci5pbnB1dFBsYWNlaG9sZGVyfVxuICAgICAgICAvPlxuICAgICAgICA8Q3Jvc3NJY29uIHNlYXJjaFRleHQ9e3NlYXJjaFRleHR9IHNldFNlYXJjaFRleHQ9e3NldFNlYXJjaFRleHR9IC8+XG4gICAgICA8L1ZpZXc+XG4gICAgICA8VG91Y2hhYmxlT3BhY2l0eVxuICAgICAgICBvblByZXNzPXsoKSA9PiBLZXlib2FyZC5kaXNtaXNzKCl9XG4gICAgICAgIHN0eWxlPXtzZWFyY2hCYXJTdHlsZXMuaW1hZ2VDb250YWluZXJ9PlxuICAgICAgICA8SW1hZ2VcbiAgICAgICAgICBzdHlsZT17c2VhcmNoQmFyU3R5bGVzLmljb25TaXplfVxuICAgICAgICAgIHNvdXJjZT17e3VyaTogbG9jYWxVcmxzLnNlYXJjaEJhci5zZWFyY2hJY29ufX1cbiAgICAgICAgLz5cbiAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cbiAgICA8L1ZpZXc+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTZWFyY2hCYXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBRUEsSUFBQUcsVUFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBRUEsSUFBQUksT0FBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUssUUFBQSxHQUFBSCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQU0sVUFBQSxHQUFBTixPQUFBO0FBQXdELElBQUFPLFdBQUEsR0FBQVAsT0FBQTtBQUFBLFNBQUFRLGNBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQUFBRCxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGFBQUE7QUFBQUEsYUFBQSxHQUFBaUIsQ0FBQTtBQU14RCxJQUFNTSxTQUF1QyxHQUFHLFNBQTFDQSxTQUF1Q0EsQ0FDM0NDLGNBQWtDLEVBQ2xCO0VBQUF4QixhQUFBLEdBQUFrQixDQUFBO0VBQ2hCLElBQUFPLElBQUEsSUFBQXpCLGFBQUEsR0FBQWlCLENBQUEsT0FBb0NPLGNBQWM7SUFBM0NFLFVBQVUsR0FBQUQsSUFBQSxDQUFWQyxVQUFVO0lBQUVDLGFBQWEsR0FBQUYsSUFBQSxDQUFiRSxhQUFhO0VBQW1CM0IsYUFBQSxHQUFBaUIsQ0FBQTtFQUVuRCxPQUNFLElBQUFsQixXQUFBLENBQUE2QixJQUFBLEVBQUNyQyxZQUFBLENBQUFzQyxJQUFJO0lBQUNDLEtBQUssRUFBRUMsa0JBQWUsQ0FBQ0MsYUFBYztJQUFBQyxRQUFBLEdBQ3pDLElBQUFsQyxXQUFBLENBQUE2QixJQUFBLEVBQUNyQyxZQUFBLENBQUFzQyxJQUFJO01BQUNDLEtBQUssRUFBRUMsa0JBQWUsQ0FBQ0csZUFBZ0I7TUFBQUQsUUFBQSxHQUMzQyxJQUFBbEMsV0FBQSxDQUFBb0MsR0FBQSxFQUFDNUMsWUFBQSxDQUFBNkMsU0FBUztRQUNSQyxLQUFLLEVBQUVYLFVBQVc7UUFDbEJZLFlBQVksRUFBRVgsYUFBYztRQUM1QkcsS0FBSyxFQUFFQyxrQkFBZSxDQUFDTCxVQUFXO1FBQ2xDYSxXQUFXLEVBQUVDLGVBQVksQ0FBQ0MsU0FBUyxDQUFDQztNQUFpQixFQUNyRCxFQUNGLElBQUEzQyxXQUFBLENBQUFvQyxHQUFBLEVBQUNyQyxVQUFBLENBQUE2QyxTQUFTO1FBQUNqQixVQUFVLEVBQUVBLFVBQVc7UUFBQ0MsYUFBYSxFQUFFQTtNQUFjLEVBQUc7SUFBQSxFQUM5RCxFQUNQLElBQUE1QixXQUFBLENBQUFvQyxHQUFBLEVBQUM1QyxZQUFBLENBQUFxRCxnQkFBZ0I7TUFDZkMsT0FBTyxFQUFFLFNBQUFBLFFBQUEsRUFBTTtRQUFBN0MsYUFBQSxHQUFBa0IsQ0FBQTtRQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtRQUFBLE9BQUE2QixxQkFBUSxDQUFDQyxPQUFPLEVBQUU7TUFBRCxDQUFFO01BQ2xDakIsS0FBSyxFQUFFQyxrQkFBZSxDQUFDaUIsY0FBZTtNQUFBZixRQUFBLEVBQ3RDLElBQUFsQyxXQUFBLENBQUFvQyxHQUFBLEVBQUM1QyxZQUFBLENBQUEwRCxLQUFLO1FBQ0puQixLQUFLLEVBQUVDLGtCQUFlLENBQUNtQixRQUFTO1FBQ2hDQyxNQUFNLEVBQUU7VUFBQ0MsR0FBRyxFQUFFQyxnQkFBUyxDQUFDWixTQUFTLENBQUNhO1FBQVU7TUFBRTtJQUM5QyxFQUNlO0VBQUEsRUFDZDtBQUVYLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBRWFoQyxTQUFTO0FBQUFpQyxPQUFBLENBQUFDLE9BQUEsR0FBQUYsUUFBQSJ9