fb97a38be12a32d2c3a7b366be7c69aa
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
var _PopupModal = _interopRequireDefault(require("./PopupModal.styles"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_2ose7wuvkn() {
  var path = "D:\\NativeApp\\src\\components\\PopupModal\\PopupModal.tsx";
  var hash = "9af2fb35de15d6e34abbfe1b24beae5f8b54c39b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\components\\PopupModal\\PopupModal.tsx",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 46
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 37
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "2": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 25,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 12,
            column: 47
          }
        },
        loc: {
          start: {
            line: 12,
            column: 70
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9af2fb35de15d6e34abbfe1b24beae5f8b54c39b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2ose7wuvkn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ose7wuvkn();
cov_2ose7wuvkn().s[0]++;
var PopupModal = function PopupModal(props) {
  cov_2ose7wuvkn().f[0]++;
  var _ref = (cov_2ose7wuvkn().s[1]++, props),
    isModalVisible = _ref.isModalVisible,
    children = _ref.children;
  cov_2ose7wuvkn().s[2]++;
  return (0, _jsxRuntime.jsx)(_reactNative.Modal, {
    transparent: true,
    statusBarTranslucent: true,
    visible: isModalVisible,
    animationType: "fade",
    children: (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: _PopupModal.default.rootContainer,
      children: (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: _PopupModal.default.modalContainer,
        children: children
      })
    })
  });
};
var _default = PopupModal;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9Qb3B1cE1vZGFsIiwiX2pzeFJ1bnRpbWUiLCJjb3ZfMm9zZTd3dXZrbiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlBvcHVwTW9kYWwiLCJwcm9wcyIsIl9yZWYiLCJpc01vZGFsVmlzaWJsZSIsImNoaWxkcmVuIiwianN4IiwiTW9kYWwiLCJ0cmFuc3BhcmVudCIsInN0YXR1c0JhclRyYW5zbHVjZW50IiwidmlzaWJsZSIsImFuaW1hdGlvblR5cGUiLCJWaWV3Iiwic3R5bGUiLCJwb3B1cE1vZGFsU3R5bGVzIiwicm9vdENvbnRhaW5lciIsIm1vZGFsQ29udGFpbmVyIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIlBvcHVwTW9kYWwudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kYWwsIFZpZXd9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgcG9wdXBNb2RhbFN0eWxlcyBmcm9tICcuL1BvcHVwTW9kYWwuc3R5bGVzJztcbmltcG9ydCB7UG9wdXBNb2RhbFByb3BzfSBmcm9tICcuL1BvcHVwTW9kYWwudHlwZSc7XG5cbi8qKlxuICogUG9wdXBNb2RhbCBjb21wb25lbnRcbiAqIEBwYXJhbSB7UG9wdXBNb2RhbFByb3BzfSBwcm9wc1xuICogQHJldHVybnMge0pTWC5FbGVtZW50fVxuICovXG5jb25zdCBQb3B1cE1vZGFsOiBSZWFjdC5GQzxQb3B1cE1vZGFsUHJvcHM+ID0gKHByb3BzKTogSlNYLkVsZW1lbnQgPT4ge1xuICBjb25zdCB7aXNNb2RhbFZpc2libGUsIGNoaWxkcmVufSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsXG4gICAgICB0cmFuc3BhcmVudFxuICAgICAgc3RhdHVzQmFyVHJhbnNsdWNlbnRcbiAgICAgIHZpc2libGU9e2lzTW9kYWxWaXNpYmxlfVxuICAgICAgYW5pbWF0aW9uVHlwZT1cImZhZGVcIj5cbiAgICAgIDxWaWV3IHN0eWxlPXtwb3B1cE1vZGFsU3R5bGVzLnJvb3RDb250YWluZXJ9PlxuICAgICAgICA8VmlldyBzdHlsZT17cG9wdXBNb2RhbFN0eWxlcy5tb2RhbENvbnRhaW5lcn0+e2NoaWxkcmVufTwvVmlldz5cbiAgICAgIDwvVmlldz5cbiAgICA8L01vZGFsPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBNb2RhbDtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBQSxZQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFFQSxJQUFBRyxXQUFBLEdBQUFELHNCQUFBLENBQUFGLE9BQUE7QUFBbUQsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBQUEsU0FBQUssZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsZUFBQTtJQUFBbEIsSUFBQTtFQUFBO0VBQUEsSUFBQW1CLFFBQUEsR0FBQWxCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBZ0IsUUFBQSxDQUFBcEIsSUFBQSxLQUFBb0IsUUFBQSxDQUFBcEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQW1CLFFBQUEsQ0FBQXBCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQWdCLGNBQUEsR0FBQUQsUUFBQSxDQUFBcEIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFzQixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBdEIsY0FBQTtBQUFBQSxjQUFBLEdBQUFpQixDQUFBO0FBUW5ELElBQU1NLFVBQXFDLEdBQUcsU0FBeENBLFVBQXFDQSxDQUFJQyxLQUFLLEVBQWtCO0VBQUF4QixjQUFBLEdBQUFrQixDQUFBO0VBQ3BFLElBQUFPLElBQUEsSUFBQXpCLGNBQUEsR0FBQWlCLENBQUEsT0FBbUNPLEtBQUs7SUFBakNFLGNBQWMsR0FBQUQsSUFBQSxDQUFkQyxjQUFjO0lBQUVDLFFBQVEsR0FBQUYsSUFBQSxDQUFSRSxRQUFRO0VBQVUzQixjQUFBLEdBQUFpQixDQUFBO0VBRXpDLE9BQ0UsSUFBQWxCLFdBQUEsQ0FBQTZCLEdBQUEsRUFBQ2xDLFlBQUEsQ0FBQW1DLEtBQUs7SUFDSkMsV0FBVztJQUNYQyxvQkFBb0I7SUFDcEJDLE9BQU8sRUFBRU4sY0FBZTtJQUN4Qk8sYUFBYSxFQUFDLE1BQU07SUFBQU4sUUFBQSxFQUNwQixJQUFBNUIsV0FBQSxDQUFBNkIsR0FBQSxFQUFDbEMsWUFBQSxDQUFBd0MsSUFBSTtNQUFDQyxLQUFLLEVBQUVDLG1CQUFnQixDQUFDQyxhQUFjO01BQUFWLFFBQUEsRUFDMUMsSUFBQTVCLFdBQUEsQ0FBQTZCLEdBQUEsRUFBQ2xDLFlBQUEsQ0FBQXdDLElBQUk7UUFBQ0MsS0FBSyxFQUFFQyxtQkFBZ0IsQ0FBQ0UsY0FBZTtRQUFBWCxRQUFBLEVBQUVBO01BQVE7SUFBUTtFQUMxRCxFQUNEO0FBRVosQ0FBQztBQUFDLElBQUFZLFFBQUEsR0FFYWhCLFVBQVU7QUFBQWlCLE9BQUEsQ0FBQUMsT0FBQSxHQUFBRixRQUFBIn0=