{"version":3,"names":["_interopRequireDefault","require","_AnimatedColor","_require","AnimatedEvent","attachNativeEvent","AnimatedImplementation","AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedValueXY","createAnimatedComponent","inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","console","warn","apply","arguments","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","Object","assign","forEach","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","_ref","length","undefined","_ref$iterations","iterations","module","exports","Value","ValueXY","Color","AnimatedColor","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","event","forkEvent","unforkEvent","Event"],"sources":["AnimatedMock.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst {AnimatedEvent, attachNativeEvent} = require('./AnimatedEvent');\nconst AnimatedImplementation = require('./AnimatedImplementation');\nconst AnimatedInterpolation = require('./nodes/AnimatedInterpolation');\nconst AnimatedNode = require('./nodes/AnimatedNode');\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst AnimatedValueXY = require('./nodes/AnimatedValueXY');\n\nconst createAnimatedComponent = require('./createAnimatedComponent');\n\nimport type {EndCallback} from './animations/Animation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\n\nimport AnimatedColor from './nodes/AnimatedColor';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start: (callback?: ?EndCallback) => void,\n): (callback?: ?EndCallback) => void {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nmodule.exports = {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n"],"mappings":"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"}