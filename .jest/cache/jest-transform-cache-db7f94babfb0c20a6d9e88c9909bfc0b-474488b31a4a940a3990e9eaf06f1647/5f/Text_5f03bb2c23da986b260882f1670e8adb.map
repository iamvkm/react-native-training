{"version":3,"names":["PressabilityDebug","_interopRequireWildcard","require","_usePressability","_interopRequireDefault","_StyleSheet","_processColor","_TextAncestor","_TextNativeComponent","React","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Text","forwardRef","props","forwardedRef","accessible","allowFontScaling","ellipsizeMode","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","suppressHighlighting","restProps","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","isHighlighted","setHighlighted","isPressable","disabled","initialized","useLazyInitialization","config","useMemo","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","usePressability","eventHandlersForText","selectionColor","processColor","style","__DEV__","isEnabled","StyleSheet","compose","color","numberOfLines","console","error","hasTextAncestor","useContext","TextAncestor","jsx","NativeVirtualText","assign","ref","Provider","value","children","NativeText","displayName","propTypes","TextPropTypes","newValue","_useState3","_useState4","oldValue","setValue","module","exports"],"sources":["Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport processColor from '../StyleSheet/processColor';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport {type TextProps} from './TextProps';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    allowFontScaling,\n    ellipsizeMode,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    restProps.disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = restProps.style;\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta',\n      });\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      {...eventHandlersForText}\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      numberOfLines={numberOfLines}\n      selectionColor={selectionColor}\n      style={style}\n      ref={forwardedRef}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        accessible={accessible !== false}\n        allowFontScaling={allowFontScaling !== false}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        numberOfLines={numberOfLines}\n        selectionColor={selectionColor}\n        style={style}\n        ref={forwardedRef}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nmodule.exports = Text;\n"],"mappings":"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"}