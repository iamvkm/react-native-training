{"version":3,"names":["React","_interopRequireWildcard","require","_useAndroidRippleForView","_interopRequireDefault","_PressabilityDebug","_usePressability","_Rect","_View","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Pressable","props","forwardedRef","accessible","android_disableSound","android_ripple","cancelable","children","delayHoverIn","delayHoverOut","delayLongPress","disabled","focusable","onHoverIn","onHoverOut","onLongPress","onPress","onPressIn","onPressOut","pressRetentionOffset","style","testOnly_pressed","unstable_pressDelay","restProps","_objectWithoutProperties2","viewRef","useRef","useImperativeHandle","current","android_rippleConfig","useAndroidRippleForView","_usePressState","usePressState","_usePressState2","_slicedToArray2","pressed","setPressed","hitSlop","normalizeRect","accessibilityState","assign","restPropsWithDefaults","viewProps","config","useMemo","pressRectOffset","delayPressIn","event","onPressMove","eventHandlers","usePressability","jsxs","ref","collapsable","__DEV__","jsx","PressabilityDebugView","color","forcePressed","_useState","useState","_useState2","MemoedPressable","memo","forwardRef","displayName","_default","exports"],"sources":["Pressable.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport * as React from 'react';\nimport {useMemo, useState, useRef, useImperativeHandle} from 'react';\nimport useAndroidRippleForView, {\n  type RippleConfig,\n} from './useAndroidRippleForView';\nimport type {\n  AccessibilityActionEvent,\n  AccessibilityActionInfo,\n  AccessibilityRole,\n  AccessibilityState,\n  AccessibilityValue,\n} from '../View/ViewAccessibility';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport usePressability from '../../Pressability/usePressability';\nimport {normalizeRect, type RectOrSize} from '../../StyleSheet/Rect';\nimport type {\n  LayoutEvent,\n  MouseEvent,\n  PressEvent,\n} from '../../Types/CoreEventTypes';\nimport View from '../View/View';\n\ntype ViewStyleProp = $ElementType<React.ElementConfig<typeof View>, 'style'>;\n\nexport type StateCallbackType = $ReadOnly<{|\n  pressed: boolean,\n|}>;\n\ntype Props = $ReadOnly<{|\n  /**\n   * Accessibility.\n   */\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  accessibilityElementsHidden?: ?boolean,\n  accessibilityHint?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityLiveRegion?: ?('none' | 'polite' | 'assertive'),\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityValue?: ?AccessibilityValue,\n  accessibilityViewIsModal?: ?boolean,\n  accessible?: ?boolean,\n  focusable?: ?boolean,\n  importantForAccessibility?: ?('auto' | 'yes' | 'no' | 'no-hide-descendants'),\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => mixed,\n\n  /**\n   * Whether a press gesture can be interrupted by a parent gesture such as a\n   * scroll event. Defaults to true.\n   */\n  cancelable?: ?boolean,\n\n  /**\n   * Either children or a render prop that receives a boolean reflecting whether\n   * the component is currently pressed.\n   */\n  children: React.Node | ((state: StateCallbackType) => React.Node),\n\n  /**\n   * Duration to wait after hover in before calling `onHoverIn`.\n   */\n  delayHoverIn?: ?number,\n\n  /**\n   * Duration to wait after hover out before calling `onHoverOut`.\n   */\n  delayHoverOut?: ?number,\n\n  /**\n   * Duration (in milliseconds) from `onPressIn` before `onLongPress` is called.\n   */\n  delayLongPress?: ?number,\n\n  /**\n   * Whether the press behavior is disabled.\n   */\n  disabled?: ?boolean,\n\n  /**\n   * Additional distance outside of this view in which a press is detected.\n   */\n  hitSlop?: ?RectOrSize,\n\n  /**\n   * Additional distance outside of this view in which a touch is considered a\n   * press before `onPressOut` is triggered.\n   */\n  pressRetentionOffset?: ?RectOrSize,\n\n  /**\n   * Called when this view's layout changes.\n   */\n  onLayout?: ?(event: LayoutEvent) => mixed,\n\n  /**\n   * Called when the hover is activated to provide visual feedback.\n   */\n  onHoverIn?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when the hover is deactivated to undo visual feedback.\n   */\n  onHoverOut?: ?(event: MouseEvent) => mixed,\n\n  /**\n   * Called when a long-tap gesture is detected.\n   */\n  onLongPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a single tap gesture is detected.\n   */\n  onPress?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a touch is engaged before `onPress`.\n   */\n  onPressIn?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Called when a touch is released before `onPress`.\n   */\n  onPressOut?: ?(event: PressEvent) => mixed,\n\n  /**\n   * Either view styles or a function that receives a boolean reflecting whether\n   * the component is currently pressed and returns view styles.\n   */\n  style?: ViewStyleProp | ((state: StateCallbackType) => ViewStyleProp),\n\n  /**\n   * Identifier used to find this view in tests.\n   */\n  testID?: ?string,\n\n  /**\n   * If true, doesn't play system sound on touch.\n   */\n  android_disableSound?: ?boolean,\n\n  /**\n   * Enables the Android ripple effect and configures its color.\n   */\n  android_ripple?: ?RippleConfig,\n\n  /**\n   * Used only for documentation or testing (e.g. snapshot testing).\n   */\n  testOnly_pressed?: ?boolean,\n\n  /**\n   * Duration to wait after press down before calling `onPressIn`.\n   */\n  unstable_pressDelay?: ?number,\n|}>;\n\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(props: Props, forwardedRef): React.Node {\n  const {\n    accessible,\n    android_disableSound,\n    android_ripple,\n    cancelable,\n    children,\n    delayHoverIn,\n    delayHoverOut,\n    delayLongPress,\n    disabled,\n    focusable,\n    onHoverIn,\n    onHoverOut,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    pressRetentionOffset,\n    style,\n    testOnly_pressed,\n    unstable_pressDelay,\n    ...restProps\n  } = props;\n\n  const viewRef = useRef<React.ElementRef<typeof View> | null>(null);\n  useImperativeHandle(forwardedRef, () => viewRef.current);\n\n  const android_rippleConfig = useAndroidRippleForView(android_ripple, viewRef);\n\n  const [pressed, setPressed] = usePressState(testOnly_pressed === true);\n\n  const hitSlop = normalizeRect(props.hitSlop);\n\n  const accessibilityState =\n    disabled != null\n      ? {...props.accessibilityState, disabled}\n      : props.accessibilityState;\n\n  const restPropsWithDefaults: React.ElementConfig<typeof View> = {\n    ...restProps,\n    ...android_rippleConfig?.viewProps,\n    accessible: accessible !== false,\n    accessibilityState,\n    focusable: focusable !== false,\n    hitSlop,\n  };\n\n  const config = useMemo(\n    () => ({\n      cancelable,\n      disabled,\n      hitSlop,\n      pressRectOffset: pressRetentionOffset,\n      android_disableSound,\n      delayHoverIn,\n      delayHoverOut,\n      delayLongPress,\n      delayPressIn: unstable_pressDelay,\n      onHoverIn,\n      onHoverOut,\n      onLongPress,\n      onPress,\n      onPressIn(event: PressEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressIn(event);\n        }\n        setPressed(true);\n        if (onPressIn != null) {\n          onPressIn(event);\n        }\n      },\n      onPressMove: android_rippleConfig?.onPressMove,\n      onPressOut(event: PressEvent): void {\n        if (android_rippleConfig != null) {\n          android_rippleConfig.onPressOut(event);\n        }\n        setPressed(false);\n        if (onPressOut != null) {\n          onPressOut(event);\n        }\n      },\n    }),\n    [\n      android_disableSound,\n      android_rippleConfig,\n      cancelable,\n      delayHoverIn,\n      delayHoverOut,\n      delayLongPress,\n      disabled,\n      hitSlop,\n      onHoverIn,\n      onHoverOut,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      pressRetentionOffset,\n      setPressed,\n      unstable_pressDelay,\n    ],\n  );\n  const eventHandlers = usePressability(config);\n\n  return (\n    <View\n      {...restPropsWithDefaults}\n      {...eventHandlers}\n      ref={viewRef}\n      style={typeof style === 'function' ? style({pressed}) : style}\n      collapsable={false}>\n      {typeof children === 'function' ? children({pressed}) : children}\n      {__DEV__ ? <PressabilityDebugView color=\"red\" hitSlop={hitSlop} /> : null}\n    </View>\n  );\n}\n\nfunction usePressState(forcePressed: boolean): [boolean, (boolean) => void] {\n  const [pressed, setPressed] = useState(false);\n  return [pressed || forcePressed, setPressed];\n}\n\nconst MemoedPressable = React.memo(React.forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\n\nexport default (MemoedPressable: React.AbstractComponent<\n  Props,\n  React.ElementRef<typeof View>,\n>);\n"],"mappings":"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"}