3a380a5f4c1e4c9d6da585b858be594a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
var _PostCard = require("./PostCard");
var _hooks = require("../../../redux/hooks");
var _global = require("../../../constants/global.constants");
var _global2 = _interopRequireDefault(require("../../../constants/global.numbers"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1kg2t1p4hn() {
  var path = "D:\\NativeApp\\src\\screens\\Home\\Posts\\Posts.tsx";
  var hash = "0afd83d4e5370ccd88f8e1242abefbdbff854eef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\screens\\Home\\Posts\\Posts.tsx",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 40
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "2": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 58
        }
      },
      "3": {
        start: {
          line: 20,
          column: 46
        },
        end: {
          line: 20,
          column: 57
        }
      },
      "4": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "6": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 58
        }
      },
      "7": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "8": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 46
        }
      },
      "9": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "10": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 53,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 16,
            column: 41
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 37
          },
          end: {
            line: 20,
            column: 38
          }
        },
        loc: {
          start: {
            line: 20,
            column: 46
          },
          end: {
            line: 20,
            column: 57
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 24
          }
        },
        loc: {
          start: {
            line: 27,
            column: 52
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 22
          },
          end: {
            line: 41,
            column: 23
          }
        },
        loc: {
          start: {
            line: 41,
            column: 75
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 30,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 29,
            column: 65
          }
        }, {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 30,
            column: 32
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0afd83d4e5370ccd88f8e1242abefbdbff854eef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1kg2t1p4hn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kg2t1p4hn();
cov_1kg2t1p4hn().s[0]++;
var Posts = function Posts(postsProps) {
  cov_1kg2t1p4hn().f[0]++;
  var _ref = (cov_1kg2t1p4hn().s[1]++, postsProps),
    searchText = _ref.searchText;
  var _ref2 = (cov_1kg2t1p4hn().s[2]++, (0, _hooks.useAppSelector)(function (state) {
      cov_1kg2t1p4hn().f[1]++;
      cov_1kg2t1p4hn().s[3]++;
      return state.posts;
    })),
    postsData = _ref2.postsData;
  cov_1kg2t1p4hn().s[4]++;
  var searchByText = function searchByText(post) {
    cov_1kg2t1p4hn().f[2]++;
    cov_1kg2t1p4hn().s[5]++;
    return (cov_1kg2t1p4hn().b[0][0]++, post.title.toLowerCase().includes(searchText.toLowerCase())) || (cov_1kg2t1p4hn().b[0][1]++, searchText === _global.emptyString);
  };
  var filteredPostsData = (cov_1kg2t1p4hn().s[6]++, postsData.filter(searchByText));
  cov_1kg2t1p4hn().s[7]++;
  var renderPosts = function renderPosts(postsListProps) {
    cov_1kg2t1p4hn().f[3]++;
    var _ref3 = (cov_1kg2t1p4hn().s[8]++, postsListProps),
      post = _ref3.item,
      index = _ref3.index;
    cov_1kg2t1p4hn().s[9]++;
    return (0, _jsxRuntime.jsx)(_PostCard.PostCard, {
      post: post
    }, index);
  };
  cov_1kg2t1p4hn().s[10]++;
  return (0, _jsxRuntime.jsx)(_reactNative.FlatList, {
    data: filteredPostsData,
    renderItem: renderPosts,
    maxToRenderPerBatch: _global2.default.posts.batchToRender,
    fadingEdgeLength: _global2.default.posts.listFadeLength
  });
};
var _default = Posts;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,