63421c7d4273cc3feb0e534d5f78a3e4
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _requireNativeComponent = _interopRequireDefault(require("../../Libraries/ReactNative/requireNativeComponent"));
var _UIManager = _interopRequireDefault(require("../ReactNative/UIManager"));
function codegenNativeComponent(componentName, options) {
  var componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;
  if (options != null && options.paperComponentNameDeprecated != null) {
    if (_UIManager.default.getViewManagerConfig(componentName)) {
      componentNameInUse = componentName;
    } else if (options.paperComponentNameDeprecated != null && _UIManager.default.getViewManagerConfig(options.paperComponentNameDeprecated)) {
      componentNameInUse = options.paperComponentNameDeprecated;
    } else {
      var _options$paperCompone;
      throw new Error(`Failed to find native component for either ${componentName} or ${(_options$paperCompone = options.paperComponentNameDeprecated) != null ? _options$paperCompone : '(unknown)'}`);
    }
  }
  return (0, _requireNativeComponent.default)(componentNameInUse);
}
var _default = codegenNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX1VJTWFuYWdlciIsImNvZGVnZW5OYXRpdmVDb21wb25lbnQiLCJjb21wb25lbnROYW1lIiwib3B0aW9ucyIsImNvbXBvbmVudE5hbWVJblVzZSIsInBhcGVyQ29tcG9uZW50TmFtZSIsInBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQiLCJVSU1hbmFnZXIiLCJnZXRWaWV3TWFuYWdlckNvbmZpZyIsIl9vcHRpb25zJHBhcGVyQ29tcG9uZSIsIkVycm9yIiwicmVxdWlyZU5hdGl2ZUNvbXBvbmVudCIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJjb2RlZ2VuTmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqL1xuXG4vLyBUT0RPOiBtb3ZlIHRoaXMgZmlsZSB0byBzaGltcy9SZWFjdE5hdGl2ZSAocmVxdWlyZXMgUmVhY3QgdXBkYXRlIGFuZCBzeW5jKVxuXG5pbXBvcnQgcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCBmcm9tICcuLi8uLi9MaWJyYXJpZXMvUmVhY3ROYXRpdmUvcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCc7XG5pbXBvcnQgdHlwZSB7SG9zdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vTGlicmFyaWVzL1JlbmRlcmVyL3NoaW1zL1JlYWN0TmF0aXZlVHlwZXMnO1xuaW1wb3J0IFVJTWFuYWdlciBmcm9tICcuLi9SZWFjdE5hdGl2ZS9VSU1hbmFnZXInO1xuXG4vLyBUT0RPOiBpbXBvcnQgZnJvbSBDb2RlZ2VuU2NoZW1hIG9uY2Ugd29ya3NwYWNlcyBhcmUgZW5hYmxlZFxudHlwZSBPcHRpb25zID0gJFJlYWRPbmx5PHt8XG4gIGludGVyZmFjZU9ubHk/OiBib29sZWFuLFxuICBwYXBlckNvbXBvbmVudE5hbWU/OiBzdHJpbmcsXG4gIHBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQ/OiBzdHJpbmcsXG4gIGV4Y2x1ZGVkUGxhdGZvcm1zPzogJFJlYWRPbmx5QXJyYXk8J2lPUycgfCAnYW5kcm9pZCc+LFxufH0+O1xuXG5leHBvcnQgdHlwZSBOYXRpdmVDb21wb25lbnRUeXBlPFQ+ID0gSG9zdENvbXBvbmVudDxUPjtcblxuZnVuY3Rpb24gY29kZWdlbk5hdGl2ZUNvbXBvbmVudDxQcm9wcz4oXG4gIGNvbXBvbmVudE5hbWU6IHN0cmluZyxcbiAgb3B0aW9ucz86IE9wdGlvbnMsXG4pOiBOYXRpdmVDb21wb25lbnRUeXBlPFByb3BzPiB7XG4gIGxldCBjb21wb25lbnROYW1lSW5Vc2UgPVxuICAgIG9wdGlvbnMgJiYgb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWUgIT0gbnVsbFxuICAgICAgPyBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZVxuICAgICAgOiBjb21wb25lbnROYW1lO1xuXG4gIGlmIChvcHRpb25zICE9IG51bGwgJiYgb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkICE9IG51bGwpIHtcbiAgICBpZiAoVUlNYW5hZ2VyLmdldFZpZXdNYW5hZ2VyQ29uZmlnKGNvbXBvbmVudE5hbWUpKSB7XG4gICAgICBjb21wb25lbnROYW1lSW5Vc2UgPSBjb21wb25lbnROYW1lO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQgIT0gbnVsbCAmJlxuICAgICAgVUlNYW5hZ2VyLmdldFZpZXdNYW5hZ2VyQ29uZmlnKG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZClcbiAgICApIHtcbiAgICAgIGNvbXBvbmVudE5hbWVJblVzZSA9IG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRmFpbGVkIHRvIGZpbmQgbmF0aXZlIGNvbXBvbmVudCBmb3IgZWl0aGVyICR7Y29tcG9uZW50TmFtZX0gb3IgJHtcbiAgICAgICAgICBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQgPz8gJyh1bmtub3duKSdcbiAgICAgICAgfWAsXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8vIElmIHRoaXMgZnVuY3Rpb24gaXMgcnVuIGF0IHJ1bnRpbWUgdGhlbiB0aGF0IG1lYW5zIHRoZSB2aWV3IGNvbmZpZ3Mgd2VyZSBub3RcbiAgLy8gZ2VuZXJhdGVkIHdpdGggdGhlIHZpZXcgY29uZmlnIGJhYmVsIHBsdWdpbiwgc28gd2UgbmVlZCB0byByZXF1aXJlIHRoZSBuYXRpdmUgY29tcG9uZW50LlxuICAvL1xuICAvLyBUaGlzIHdpbGwgYmUgdXNlZnVsIGR1cmluZyBtaWdyYXRpb24sIGJ1dCBldmVudHVhbGx5IHRoaXMgd2lsbCBlcnJvci5cbiAgcmV0dXJuIChyZXF1aXJlTmF0aXZlQ29tcG9uZW50PFByb3BzPihcbiAgICBjb21wb25lbnROYW1lSW5Vc2UsXG4gICk6IEhvc3RDb21wb25lbnQ8UHJvcHM+KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29kZWdlbk5hdGl2ZUNvbXBvbmVudDtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFZQSxJQUFBQSx1QkFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsVUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBWUEsU0FBU0Usc0JBQXNCQSxDQUM3QkMsYUFBcUIsRUFDckJDLE9BQWlCLEVBQ1c7RUFDNUIsSUFBSUMsa0JBQWtCLEdBQ3BCRCxPQUFPLElBQUlBLE9BQU8sQ0FBQ0Usa0JBQWtCLElBQUksSUFBSSxHQUN6Q0YsT0FBTyxDQUFDRSxrQkFBa0IsR0FDMUJILGFBQWE7RUFFbkIsSUFBSUMsT0FBTyxJQUFJLElBQUksSUFBSUEsT0FBTyxDQUFDRyw0QkFBNEIsSUFBSSxJQUFJLEVBQUU7SUFDbkUsSUFBSUMsa0JBQVMsQ0FBQ0Msb0JBQW9CLENBQUNOLGFBQWEsQ0FBQyxFQUFFO01BQ2pERSxrQkFBa0IsR0FBR0YsYUFBYTtJQUNwQyxDQUFDLE1BQU0sSUFDTEMsT0FBTyxDQUFDRyw0QkFBNEIsSUFBSSxJQUFJLElBQzVDQyxrQkFBUyxDQUFDQyxvQkFBb0IsQ0FBQ0wsT0FBTyxDQUFDRyw0QkFBNEIsQ0FBQyxFQUNwRTtNQUNBRixrQkFBa0IsR0FBR0QsT0FBTyxDQUFDRyw0QkFBNEI7SUFDM0QsQ0FBQyxNQUFNO01BQUEsSUFBQUcscUJBQUE7TUFDTCxNQUFNLElBQUlDLEtBQUssQ0FDWiw4Q0FBNkNSLGFBQWMsT0FBSSxDQUFBTyxxQkFBQSxHQUM5RE4sT0FBTyxDQUFDRyw0QkFBNEIsWUFBQUcscUJBQUEsR0FBSSxXQUN6QyxFQUFDLENBQ0g7SUFDSDtFQUNGO0VBTUEsT0FBUSxJQUFBRSwrQkFBc0IsRUFDNUJQLGtCQUFrQixDQUNuQjtBQUNIO0FBQUMsSUFBQVEsUUFBQSxHQUVjWCxzQkFBc0I7QUFBQVksT0FBQSxDQUFBQyxPQUFBLEdBQUFGLFFBQUEifQ==