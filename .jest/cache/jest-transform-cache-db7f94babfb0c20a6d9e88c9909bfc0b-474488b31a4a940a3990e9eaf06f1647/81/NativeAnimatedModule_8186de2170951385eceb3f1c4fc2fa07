91f58521a48935c9d5150677d84922da
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = TurboModuleRegistry.get('NativeAnimatedModule');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIk5hdGl2ZUFuaW1hdGVkTW9kdWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCB0eXBlIHtUdXJib01vZHVsZX0gZnJvbSAnLi4vVHVyYm9Nb2R1bGUvUkNURXhwb3J0JztcbmltcG9ydCAqIGFzIFR1cmJvTW9kdWxlUmVnaXN0cnkgZnJvbSAnLi4vVHVyYm9Nb2R1bGUvVHVyYm9Nb2R1bGVSZWdpc3RyeSc7XG5cbnR5cGUgRW5kUmVzdWx0ID0ge2ZpbmlzaGVkOiBib29sZWFuLCAuLi59O1xudHlwZSBFbmRDYWxsYmFjayA9IChyZXN1bHQ6IEVuZFJlc3VsdCkgPT4gdm9pZDtcbnR5cGUgU2F2ZVZhbHVlQ2FsbGJhY2sgPSAodmFsdWU6IG51bWJlcikgPT4gdm9pZDtcblxuZXhwb3J0IHR5cGUgRXZlbnRNYXBwaW5nID0ge3xcbiAgbmF0aXZlRXZlbnRQYXRoOiBBcnJheTxzdHJpbmc+LFxuICBhbmltYXRlZFZhbHVlVGFnOiA/bnVtYmVyLFxufH07XG5cbi8vIFRoZSBjb25maWcgaGFzIGRpZmZlcmVudCBrZXlzIGRlcGVuZGluZyBvbiB0aGUgdHlwZSBvZiB0aGUgTm9kZVxuLy8gVE9ETyhUNTQ4OTY4ODgpOiBNYWtlIHRoZXNlIHR5cGVzIHN0cmljdFxuZXhwb3J0IHR5cGUgQW5pbWF0ZWROb2RlQ29uZmlnID0gT2JqZWN0O1xuZXhwb3J0IHR5cGUgQW5pbWF0aW5nTm9kZUNvbmZpZyA9IE9iamVjdDtcblxuZXhwb3J0IGludGVyZmFjZSBTcGVjIGV4dGVuZHMgVHVyYm9Nb2R1bGUge1xuICArc3RhcnRPcGVyYXRpb25CYXRjaDogKCkgPT4gdm9pZDtcbiAgK2ZpbmlzaE9wZXJhdGlvbkJhdGNoOiAoKSA9PiB2b2lkO1xuICArY3JlYXRlQW5pbWF0ZWROb2RlOiAodGFnOiBudW1iZXIsIGNvbmZpZzogQW5pbWF0ZWROb2RlQ29uZmlnKSA9PiB2b2lkO1xuICArZ2V0VmFsdWU6ICh0YWc6IG51bWJlciwgc2F2ZVZhbHVlQ2FsbGJhY2s6IFNhdmVWYWx1ZUNhbGxiYWNrKSA9PiB2b2lkO1xuICArc3RhcnRMaXN0ZW5pbmdUb0FuaW1hdGVkTm9kZVZhbHVlOiAodGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtzdG9wTGlzdGVuaW5nVG9BbmltYXRlZE5vZGVWYWx1ZTogKHRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArY29ubmVjdEFuaW1hdGVkTm9kZXM6IChwYXJlbnRUYWc6IG51bWJlciwgY2hpbGRUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Rpc2Nvbm5lY3RBbmltYXRlZE5vZGVzOiAocGFyZW50VGFnOiBudW1iZXIsIGNoaWxkVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtzdGFydEFuaW1hdGluZ05vZGU6IChcbiAgICBhbmltYXRpb25JZDogbnVtYmVyLFxuICAgIG5vZGVUYWc6IG51bWJlcixcbiAgICBjb25maWc6IEFuaW1hdGluZ05vZGVDb25maWcsXG4gICAgZW5kQ2FsbGJhY2s6IEVuZENhbGxiYWNrLFxuICApID0+IHZvaWQ7XG4gICtzdG9wQW5pbWF0aW9uOiAoYW5pbWF0aW9uSWQ6IG51bWJlcikgPT4gdm9pZDtcbiAgK3NldEFuaW1hdGVkTm9kZVZhbHVlOiAobm9kZVRhZzogbnVtYmVyLCB2YWx1ZTogbnVtYmVyKSA9PiB2b2lkO1xuICArc2V0QW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogbnVtYmVyLCBvZmZzZXQ6IG51bWJlcikgPT4gdm9pZDtcbiAgK2ZsYXR0ZW5BbmltYXRlZE5vZGVPZmZzZXQ6IChub2RlVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtleHRyYWN0QW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArY29ubmVjdEFuaW1hdGVkTm9kZVRvVmlldzogKG5vZGVUYWc6IG51bWJlciwgdmlld1RhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArZGlzY29ubmVjdEFuaW1hdGVkTm9kZUZyb21WaWV3OiAobm9kZVRhZzogbnVtYmVyLCB2aWV3VGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtyZXN0b3JlRGVmYXVsdFZhbHVlczogKG5vZGVUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Ryb3BBbmltYXRlZE5vZGU6ICh0YWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2FkZEFuaW1hdGVkRXZlbnRUb1ZpZXc6IChcbiAgICB2aWV3VGFnOiBudW1iZXIsXG4gICAgZXZlbnROYW1lOiBzdHJpbmcsXG4gICAgZXZlbnRNYXBwaW5nOiBFdmVudE1hcHBpbmcsXG4gICkgPT4gdm9pZDtcbiAgK3JlbW92ZUFuaW1hdGVkRXZlbnRGcm9tVmlldzogKFxuICAgIHZpZXdUYWc6IG51bWJlcixcbiAgICBldmVudE5hbWU6IHN0cmluZyxcbiAgICBhbmltYXRlZE5vZGVUYWc6IG51bWJlcixcbiAgKSA9PiB2b2lkO1xuXG4gIC8vIEV2ZW50c1xuICArYWRkTGlzdGVuZXI6IChldmVudE5hbWU6IHN0cmluZykgPT4gdm9pZDtcbiAgK3JlbW92ZUxpc3RlbmVyczogKGNvdW50OiBudW1iZXIpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IChUdXJib01vZHVsZVJlZ2lzdHJ5LmdldDxTcGVjPignTmF0aXZlQW5pbWF0ZWRNb2R1bGUnKTogP1NwZWMpO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBV0EsSUFBQUEsbUJBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUEwRSxTQUFBQyx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQUgsd0JBQUFPLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdBQUFELEdBQUEsUUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQSw0QkFBQUUsT0FBQSxFQUFBRixHQUFBLFVBQUFHLEtBQUEsR0FBQVIsd0JBQUEsQ0FBQUMsV0FBQSxPQUFBTyxLQUFBLElBQUFBLEtBQUEsQ0FBQUMsR0FBQSxDQUFBSixHQUFBLFlBQUFHLEtBQUEsQ0FBQUUsR0FBQSxDQUFBTCxHQUFBLFNBQUFNLE1BQUEsV0FBQUMscUJBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUEsV0FBQUMsR0FBQSxJQUFBWCxHQUFBLFFBQUFXLEdBQUEsa0JBQUFILE1BQUEsQ0FBQUksU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWQsR0FBQSxFQUFBVyxHQUFBLFNBQUFJLElBQUEsR0FBQVIscUJBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBVixHQUFBLEVBQUFXLEdBQUEsY0FBQUksSUFBQSxLQUFBQSxJQUFBLENBQUFWLEdBQUEsSUFBQVUsSUFBQSxDQUFBQyxHQUFBLEtBQUFSLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSCxNQUFBLEVBQUFLLEdBQUEsRUFBQUksSUFBQSxZQUFBVCxNQUFBLENBQUFLLEdBQUEsSUFBQVgsR0FBQSxDQUFBVyxHQUFBLFNBQUFMLE1BQUEsQ0FBQUosT0FBQSxHQUFBRixHQUFBLE1BQUFHLEtBQUEsSUFBQUEsS0FBQSxDQUFBYSxHQUFBLENBQUFoQixHQUFBLEVBQUFNLE1BQUEsWUFBQUEsTUFBQTtBQUFBLElBQUFXLFFBQUEsR0F3RDFEekIsbUJBQW1CLENBQUNhLEdBQUcsQ0FBTyxzQkFBc0IsQ0FBQztBQUFBYSxPQUFBLENBQUFoQixPQUFBLEdBQUFlLFFBQUEifQ==