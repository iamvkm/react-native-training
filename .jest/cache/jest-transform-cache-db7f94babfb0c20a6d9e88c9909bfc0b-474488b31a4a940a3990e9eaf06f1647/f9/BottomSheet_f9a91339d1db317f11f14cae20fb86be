fa665a29a6f4e5339bca3f92c8a7354e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _reactNativeActionsSheet = _interopRequireDefault(require("react-native-actions-sheet"));
var _BottomSheet = _interopRequireDefault(require("./BottomSheet.styles"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1jvwgvq7jr() {
  var path = "D:\\NativeApp\\src\\components\\BottomSheet\\BottomSheet.tsx";
  var hash = "24931c13fc1929b5b8b1574fe8163c4bd3b629d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\NativeApp\\src\\components\\BottomSheet\\BottomSheet.tsx",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 48
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "2": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 22,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 48
          },
          end: {
            line: 13,
            column: 49
          }
        },
        loc: {
          start: {
            line: 13,
            column: 72
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "24931c13fc1929b5b8b1574fe8163c4bd3b629d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1jvwgvq7jr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jvwgvq7jr();
cov_1jvwgvq7jr().s[0]++;
var BottomSheet = function BottomSheet(props) {
  cov_1jvwgvq7jr().f[0]++;
  var _ref = (cov_1jvwgvq7jr().s[1]++, props),
    sheetRef = _ref.sheetRef,
    children = _ref.children;
  cov_1jvwgvq7jr().s[2]++;
  return (0, _jsxRuntime.jsx)(_reactNativeActionsSheet.default, {
    ref: sheetRef,
    containerStyle: _BottomSheet.default.rootContainer,
    children: (0, _jsxRuntime.jsx)(_reactNative.View, {
      children: children
    })
  });
};
var _default = BottomSheet;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9yZWFjdE5hdGl2ZUFjdGlvbnNTaGVldCIsIl9Cb3R0b21TaGVldCIsIl9qc3hSdW50aW1lIiwiY292XzFqdndndnE3anIiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJCb3R0b21TaGVldCIsInByb3BzIiwiX3JlZiIsInNoZWV0UmVmIiwiY2hpbGRyZW4iLCJqc3giLCJkZWZhdWx0IiwicmVmIiwiY29udGFpbmVyU3R5bGUiLCJib3R0b21TaGVldFN0eWxlcyIsInJvb3RDb250YWluZXIiLCJWaWV3IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQm90dG9tU2hlZXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1ZpZXd9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgQWN0aW9uU2hlZXQgZnJvbSAncmVhY3QtbmF0aXZlLWFjdGlvbnMtc2hlZXQnO1xuXG5pbXBvcnQgYm90dG9tU2hlZXRTdHlsZXMgZnJvbSAnLi9Cb3R0b21TaGVldC5zdHlsZXMnO1xuaW1wb3J0IHtCb3R0b21TaGVldFByb3BzfSBmcm9tICcuL0JvdHRvbVNoZWV0LnR5cGUnO1xuXG4vKipcbiAqIEJvdHRvbVNoZWV0IGNvbXBvbmVudFxuICogQHBhcmFtIHtCb3R0b21TaGVldFByb3BzfSBwcm9wc1xuICogQHJldHVybnMge0pTWC5FbGVtZW50fVxuICovXG5jb25zdCBCb3R0b21TaGVldDogUmVhY3QuRkM8Qm90dG9tU2hlZXRQcm9wcz4gPSAocHJvcHMpOiBKU1guRWxlbWVudCA9PiB7XG4gIGNvbnN0IHtzaGVldFJlZiwgY2hpbGRyZW59ID0gcHJvcHM7XG5cbiAgcmV0dXJuIChcbiAgICA8QWN0aW9uU2hlZXRcbiAgICAgIHJlZj17c2hlZXRSZWZ9XG4gICAgICBjb250YWluZXJTdHlsZT17Ym90dG9tU2hlZXRTdHlsZXMucm9vdENvbnRhaW5lcn0+XG4gICAgICA8Vmlldz57Y2hpbGRyZW59PC9WaWV3PlxuICAgIDwvQWN0aW9uU2hlZXQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb3R0b21TaGVldDtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSx3QkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUcsWUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQXFELElBQUFJLFdBQUEsR0FBQUosT0FBQTtBQUFBLFNBQUFLLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGNBQUE7QUFBQUEsY0FBQSxHQUFBaUIsQ0FBQTtBQVFyRCxJQUFNTSxXQUF1QyxHQUFHLFNBQTFDQSxXQUF1Q0EsQ0FBSUMsS0FBSyxFQUFrQjtFQUFBeEIsY0FBQSxHQUFBa0IsQ0FBQTtFQUN0RSxJQUFBTyxJQUFBLElBQUF6QixjQUFBLEdBQUFpQixDQUFBLE9BQTZCTyxLQUFLO0lBQTNCRSxRQUFRLEdBQUFELElBQUEsQ0FBUkMsUUFBUTtJQUFFQyxRQUFRLEdBQUFGLElBQUEsQ0FBUkUsUUFBUTtFQUFVM0IsY0FBQSxHQUFBaUIsQ0FBQTtFQUVuQyxPQUNFLElBQUFsQixXQUFBLENBQUE2QixHQUFBLEVBQUMvQix3QkFBQSxDQUFBZ0MsT0FBVztJQUNWQyxHQUFHLEVBQUVKLFFBQVM7SUFDZEssY0FBYyxFQUFFQyxvQkFBaUIsQ0FBQ0MsYUFBYztJQUFBTixRQUFBLEVBQ2hELElBQUE1QixXQUFBLENBQUE2QixHQUFBLEVBQUNoQyxZQUFBLENBQUFzQyxJQUFJO01BQUFQLFFBQUEsRUFBRUE7SUFBUTtFQUFRLEVBQ1g7QUFFbEIsQ0FBQztBQUFDLElBQUFRLFFBQUEsR0FFYVosV0FBVztBQUFBYSxPQUFBLENBQUFQLE9BQUEsR0FBQU0sUUFBQSJ9